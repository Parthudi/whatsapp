[{"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\index.js":"1","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\serviceWorker.js":"2","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\App.js":"3","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\context\\UserContext.js":"4","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\context\\LayoutContext.js":"5","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\themes\\index.js":"6","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Layout\\Layout.js":"7","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\error\\Error.js":"8","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\login\\Login.js":"9","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\themes\\default.js":"10","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\login\\styles.js":"11","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\error\\styles.js":"12","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Layout\\styles.js":"13","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\charts\\Charts.js":"14","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\icons\\Icons.js":"15","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\Dashboard.js":"16","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\maps\\Maps.js":"17","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\Sidebar.js":"18","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\notifications\\Notifications.js":"19","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Header\\Header.js":"20","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\mock.js":"21","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\icons\\styles.js":"22","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\styles.js":"23","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\maps\\styles.js":"24","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\charts\\components\\ApexHeatmap.js":"25","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\charts\\components\\ApexLineChart.js":"26","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Header\\styles.js":"27","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\notifications\\styles.js":"28","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\components\\Dot.js":"29","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Widget\\Widget.js":"30","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\PageTitle\\PageTitle.js":"31","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\components\\Table\\Table.js":"32","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"33","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Wrappers\\Wrappers.js":"34","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Notification\\Notification.js":"35","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\UserAvatar\\UserAvatar.js":"36","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"37","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\styles.js":"38","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\PageTitle\\styles.js":"39","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Widget\\styles.js":"40","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"41","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Notification\\styles.js":"42","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\UserAvatar\\styles.js":"43","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"44","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\message\\styles.js":"45","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\message\\Message.js":"46","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\users\\Users.js":"47","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\index.js":"48","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\serviceWorker.js":"49","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\context\\UserContext.js":"50","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\context\\LayoutContext.js":"51","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\App.js":"52","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\themes\\index.js":"53","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Layout\\Layout.js":"54","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\login\\Login.js":"55","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\error\\Error.js":"56","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\themes\\default.js":"57","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\error\\styles.js":"58","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\login\\styles.js":"59","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Layout\\styles.js":"60","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\Users.js":"61","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\Message.js":"62","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\charts\\Charts.js":"63","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\icons\\Icons.js":"64","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\notifications\\Notifications.js":"65","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\Dashboard.js":"66","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\maps\\Maps.js":"67","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\Sidebar.js":"68","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Header\\Header.js":"69","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\mock.js":"70","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\styles.js":"71","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\components\\Table\\Table.js":"72","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Widget\\Widget.js":"73","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\PageTitle\\PageTitle.js":"74","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Wrappers\\Wrappers.js":"75","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\icons\\styles.js":"76","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\charts\\components\\ApexLineChart.js":"77","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\charts\\components\\ApexHeatmap.js":"78","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\styles.js":"79","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\maps\\styles.js":"80","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\components\\Dot.js":"81","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"82","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"83","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Header\\styles.js":"84","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\styles.js":"85","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\notifications\\styles.js":"86","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\UserAvatar\\UserAvatar.js":"87","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Notification\\Notification.js":"88","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Widget\\styles.js":"89","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\PageTitle\\styles.js":"90","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"91","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"92","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Notification\\styles.js":"93","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\UserAvatar\\styles.js":"94","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\contacts.js":"95","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\components\\contactsTable\\contactsTable.js":"96","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\contacts\\contacts.js":"97","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\components\\contactsTable\\contactsTable.js":"98","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\profile\\profile.js":"99","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\profile\\profile.js":"100","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\profile\\styles.js":"101","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\profile\\styles.js":"102","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\UserRegister.js":"103","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\CompanyRegister.js":"104","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\styles.js":"105","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\addContact.js":"106","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\styles.js":"107","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\createGroups.js":"108","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\PersonalMessage.js":"109","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\allContactMessage.js":"110","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\groupMessage.js":"111","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\personalMessage.js":"112","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\message.js":"113","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\uploadSheet.js":"114"},{"size":896,"mtime":1619688090078,"results":"115","hashOfConfig":"116"},{"size":5083,"mtime":1619688090094,"results":"117","hashOfConfig":"116"},{"size":1787,"mtime":1619688090078,"results":"118","hashOfConfig":"116"},{"size":4757,"mtime":1622524566669,"results":"119","hashOfConfig":"116"},{"size":1444,"mtime":1619688090078,"results":"120","hashOfConfig":"116"},{"size":534,"mtime":1619688090094,"results":"121","hashOfConfig":"116"},{"size":5111,"mtime":1620384813371,"results":"122","hashOfConfig":"116"},{"size":1626,"mtime":1619688090094,"results":"123","hashOfConfig":"116"},{"size":15093,"mtime":1621833836278,"results":"124","hashOfConfig":"116"},{"size":3127,"mtime":1619688090094,"results":"125","hashOfConfig":"116"},{"size":3281,"mtime":1619688090094,"results":"126","hashOfConfig":"116"},{"size":1395,"mtime":1619688090094,"results":"127","hashOfConfig":"116"},{"size":710,"mtime":1619688090078,"results":"128","hashOfConfig":"116"},{"size":5790,"mtime":1619688090078,"results":"129","hashOfConfig":"116"},{"size":391433,"mtime":1619688090094,"results":"130","hashOfConfig":"116"},{"size":12968,"mtime":1621833874921,"results":"131","hashOfConfig":"116"},{"size":1010,"mtime":1619690690686,"results":"132","hashOfConfig":"116"},{"size":4378,"mtime":1620204375218,"results":"133","hashOfConfig":"116"},{"size":13862,"mtime":1619688090094,"results":"134","hashOfConfig":"116"},{"size":10224,"mtime":1619692793386,"results":"135","hashOfConfig":"116"},{"size":4628,"mtime":1620373443555,"results":"136","hashOfConfig":"116"},{"size":812,"mtime":1619688090094,"results":"137","hashOfConfig":"116"},{"size":3000,"mtime":1619688090094,"results":"138","hashOfConfig":"116"},{"size":178,"mtime":1619688090094,"results":"139","hashOfConfig":"116"},{"size":1909,"mtime":1619688090078,"results":"140","hashOfConfig":"116"},{"size":1396,"mtime":1619688090078,"results":"141","hashOfConfig":"116"},{"size":4043,"mtime":1619688090078,"results":"142","hashOfConfig":"116"},{"size":1943,"mtime":1619688090094,"results":"143","hashOfConfig":"116"},{"size":902,"mtime":1619688090078,"results":"144","hashOfConfig":"116"},{"size":2581,"mtime":1619688090078,"results":"145","hashOfConfig":"116"},{"size":447,"mtime":1619688090078,"results":"146","hashOfConfig":"116"},{"size":1119,"mtime":1621921051447,"results":"147","hashOfConfig":"116"},{"size":4160,"mtime":1619688090078,"results":"148","hashOfConfig":"116"},{"size":3971,"mtime":1619688090078,"results":"149","hashOfConfig":"116"},{"size":3413,"mtime":1619688090078,"results":"150","hashOfConfig":"116"},{"size":620,"mtime":1619688090078,"results":"151","hashOfConfig":"116"},{"size":4589,"mtime":1619688090078,"results":"152","hashOfConfig":"116"},{"size":1363,"mtime":1619688090078,"results":"153","hashOfConfig":"116"},{"size":482,"mtime":1619688090078,"results":"154","hashOfConfig":"116"},{"size":1015,"mtime":1619688090078,"results":"155","hashOfConfig":"116"},{"size":1075,"mtime":1619688090078,"results":"156","hashOfConfig":"116"},{"size":1040,"mtime":1619688090078,"results":"157","hashOfConfig":"116"},{"size":291,"mtime":1619688090078,"results":"158","hashOfConfig":"116"},{"size":1474,"mtime":1619688090078,"results":"159","hashOfConfig":"116"},{"size":428,"mtime":1621838399563,"results":"160","hashOfConfig":"116"},{"size":4788,"mtime":1622547409525,"results":"161","hashOfConfig":"116"},{"size":4030,"mtime":1621925577818,"results":"162","hashOfConfig":"116"},{"size":896,"mtime":1619688090078,"results":"163","hashOfConfig":"164"},{"size":5083,"mtime":1619688090094,"results":"165","hashOfConfig":"164"},{"size":7090,"mtime":1623071193546,"results":"166","hashOfConfig":"164"},{"size":1444,"mtime":1619688090078,"results":"167","hashOfConfig":"164"},{"size":1787,"mtime":1619688090078,"results":"168","hashOfConfig":"164"},{"size":534,"mtime":1619688090094,"results":"169","hashOfConfig":"164"},{"size":4186,"mtime":1623136548325,"results":"170","hashOfConfig":"164"},{"size":10108,"mtime":1622712806251,"results":"171","hashOfConfig":"164"},{"size":1626,"mtime":1619688090094,"results":"172","hashOfConfig":"164"},{"size":3127,"mtime":1619688090094,"results":"173","hashOfConfig":"164"},{"size":1395,"mtime":1619688090094,"results":"174","hashOfConfig":"164"},{"size":3281,"mtime":1622630661213,"results":"175","hashOfConfig":"164"},{"size":710,"mtime":1619688090078,"results":"176","hashOfConfig":"164"},{"size":4635,"mtime":1623057181096,"results":"177","hashOfConfig":"164"},{"size":1729,"mtime":1623064683870,"results":"178","hashOfConfig":"164"},{"size":5790,"mtime":1619688090078,"results":"179","hashOfConfig":"164"},{"size":391433,"mtime":1619688090094,"results":"180","hashOfConfig":"164"},{"size":13862,"mtime":1619688090094,"results":"181","hashOfConfig":"164"},{"size":12968,"mtime":1622702905704,"results":"182","hashOfConfig":"164"},{"size":1010,"mtime":1619690690686,"results":"183","hashOfConfig":"164"},{"size":4378,"mtime":1620204375218,"results":"184","hashOfConfig":"164"},{"size":10224,"mtime":1619692793386,"results":"185","hashOfConfig":"164"},{"size":4630,"mtime":1622714491727,"results":"186","hashOfConfig":"164"},{"size":428,"mtime":1621838399563,"results":"187","hashOfConfig":"164"},{"size":1119,"mtime":1621921051447,"results":"188","hashOfConfig":"164"},{"size":2581,"mtime":1619688090078,"results":"189","hashOfConfig":"164"},{"size":447,"mtime":1619688090078,"results":"190","hashOfConfig":"164"},{"size":3971,"mtime":1619688090078,"results":"191","hashOfConfig":"164"},{"size":812,"mtime":1619688090094,"results":"192","hashOfConfig":"164"},{"size":1396,"mtime":1619688090078,"results":"193","hashOfConfig":"164"},{"size":1909,"mtime":1619688090078,"results":"194","hashOfConfig":"164"},{"size":1363,"mtime":1619688090078,"results":"195","hashOfConfig":"164"},{"size":178,"mtime":1619688090094,"results":"196","hashOfConfig":"164"},{"size":902,"mtime":1619688090078,"results":"197","hashOfConfig":"164"},{"size":4589,"mtime":1619688090078,"results":"198","hashOfConfig":"164"},{"size":4160,"mtime":1619688090078,"results":"199","hashOfConfig":"164"},{"size":4043,"mtime":1619688090078,"results":"200","hashOfConfig":"164"},{"size":3000,"mtime":1619688090094,"results":"201","hashOfConfig":"164"},{"size":1943,"mtime":1619688090094,"results":"202","hashOfConfig":"164"},{"size":620,"mtime":1619688090078,"results":"203","hashOfConfig":"164"},{"size":3413,"mtime":1619688090078,"results":"204","hashOfConfig":"164"},{"size":1015,"mtime":1619688090078,"results":"205","hashOfConfig":"164"},{"size":482,"mtime":1619688090078,"results":"206","hashOfConfig":"164"},{"size":1474,"mtime":1619688090078,"results":"207","hashOfConfig":"164"},{"size":1075,"mtime":1619688090078,"results":"208","hashOfConfig":"164"},{"size":1040,"mtime":1619688090078,"results":"209","hashOfConfig":"164"},{"size":291,"mtime":1619688090078,"results":"210","hashOfConfig":"164"},{"size":2827,"mtime":1623136572655,"results":"211","hashOfConfig":"164"},{"size":1247,"mtime":1620373548366,"results":"212","hashOfConfig":"164"},{"size":944,"mtime":1620373158535,"results":"213","hashOfConfig":"116"},{"size":1247,"mtime":1620373548366,"results":"214","hashOfConfig":"116"},{"size":1649,"mtime":1621929357391,"results":"215","hashOfConfig":"116"},{"size":1655,"mtime":1622785298542,"results":"216","hashOfConfig":"164"},{"size":539,"mtime":1622785140828,"results":"217","hashOfConfig":"164"},{"size":509,"mtime":1621929351579,"results":"218","hashOfConfig":"116"},{"size":9130,"mtime":1623067324732,"results":"219","hashOfConfig":"164"},{"size":7616,"mtime":1623055390379,"results":"220","hashOfConfig":"164"},{"size":3281,"mtime":1622713243960,"results":"221","hashOfConfig":"164"},{"size":7203,"mtime":1623130257712,"results":"222","hashOfConfig":"164"},{"size":3281,"mtime":1622713243960,"results":"223","hashOfConfig":"164"},{"size":4175,"mtime":1623060914603,"results":"224","hashOfConfig":"164"},{"size":6742,"mtime":1623064668045,"results":"225","hashOfConfig":"164"},{"size":5730,"mtime":1623072138896,"results":"226","hashOfConfig":"164"},{"size":7271,"mtime":1623068764753,"results":"227","hashOfConfig":"164"},{"size":6742,"mtime":1623064668045,"results":"228","hashOfConfig":"164"},{"size":1444,"mtime":1623129859312,"results":"229","hashOfConfig":"164"},{"size":6340,"mtime":1623142319470,"results":"230","hashOfConfig":"164"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},"ia8nsq",{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"233"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"233"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},"1jcohhr",{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"330"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"330"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"330"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"330"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"330"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"330"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"431"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"233"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"439","messages":"440","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"330"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"330"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"330"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"330"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"463","messages":"464","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"330"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"330"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"330"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"330"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\index.js",[],["477","478"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\serviceWorker.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\App.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\context\\UserContext.js",["479"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\context\\LayoutContext.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\themes\\index.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Layout\\Layout.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\error\\Error.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\login\\Login.js",["480","481","482"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\themes\\default.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\login\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\error\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Layout\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\charts\\Charts.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\icons\\Icons.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\Dashboard.js",["483","484"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\maps\\Maps.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\Sidebar.js",["485","486","487","488","489"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Textsms as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  InsertEmoticon as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  SettingsPower as LogoutIcon,\r\n  Contacts as ContactIcon,\r\n  Person as PersonIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  {\r\n    id: 1,\r\n    label: \"Messages\",\r\n    link: \"/app/message\",\r\n    icon: <TypographyIcon />,\r\n  },\r\n  { id: 2, label: \"Users\", link: \"/app/users\", icon: <TableIcon /> },\r\n  {\r\n    id: 3,\r\n    label: \"Contacts\",\r\n    link: \"/app/contacts\",\r\n    icon: <ContactIcon />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"Profile\",\r\n    link: \"/app/profile\",\r\n    icon: <PersonIcon />,\r\n  },\r\n  ,{\r\n    id: 5,\r\n    label: \"Logout\",\r\n    link: \"/app/logout\",\r\n    icon: <LogoutIcon />,\r\n  },\r\n  {\r\n    id: 6,\r\n    label: \"Notifications\",\r\n    link: \"/app/notifications\",\r\n    icon: <NotificationsIcon />,\r\n  },\r\n  {\r\n    id: 7,\r\n    label: \"UI Elements\",\r\n    link: \"/app/ui\",\r\n    icon: <UIElementsIcon />,\r\n    children: [\r\n      { label: \"Icons\", link: \"/app/ui/icons\" },\r\n      { label: \"Charts\", link: \"/app/ui/charts\" },\r\n      { label: \"Maps\", link: \"/app/ui/maps\" },\r\n    ],\r\n  },\r\n  // { id: 8, type: \"divider\" },\r\n  // { id: 9, type: \"title\", label: \"HELP\" },\r\n  // { id: 10, label: \"Library\", link: \"https://flatlogic.com/templates\", icon: <LibraryIcon /> },\r\n  // { id: 11, label: \"Support\", link: \"https://flatlogic.com/forum\", icon: <SupportIcon /> },\r\n  // { id: 12, label: \"FAQ\", link: \"https://flatlogic.com/forum\", icon: <FAQIcon /> }\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\notifications\\Notifications.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Header\\Header.js",["490","491"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n           Admin\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              John Smith\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n              Flalogic.com\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\mock.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\icons\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\maps\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\charts\\components\\ApexLineChart.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Header\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\notifications\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Widget\\Widget.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Notification\\Notification.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\PageTitle\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Widget\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Notification\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\UserAvatar\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\message\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\message\\Message.js",["492","493"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\users\\Users.js",["494"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\index.js",[],["495","496"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\serviceWorker.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\context\\UserContext.js",["497"],"import React, {useState} from \"react\";\r\n\r\nvar UserStateContext = React.createContext();\r\nvar UserDispatchContext = React.createContext();\r\n\r\nfunction userReducer(state, action) {\r\n  console.log(\"action : \" +action.type);\r\n  switch (action.type) {\r\n    case \"REGISTER_FAILURE\":\r\n      return { ...state, error: true, isAuthenticated: false};\r\n    case \"SIGN_OUT_SUCCESS\":\r\n      return { ...state,  error: false, isAuthenticated: false };\r\n    case \"LOGIN_SUCCESS\":\r\n      return { ...state, error: false,  isAuthenticated: true };\r\n    case \"LOGIN_FAILURE\":\r\n      return { ...state, error: true ,  isAuthenticated: false };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction UserProvider({ children }) {\r\n  const err = \"Fill the correct details only!\";\r\n  \r\n  var [state, dispatch] = React.useReducer(userReducer, {\r\n      isAuthenticated: !!localStorage.getItem(\"TOKEN\"),\r\n      error: !!err\r\n  });\r\n\r\n  return (\r\n    <UserStateContext.Provider value={state}>\r\n      <UserDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useUserState() {\r\n  var context = React.useContext(UserStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserState must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useUserDispatch() {\r\n  var context = React.useContext(UserDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\n// ###########################################################\r\n\r\nasync function SignupCompany(name, address1 ,address2, state, city, pincode, gstin) {\r\n  try {\r\n      const response = await fetch(`http://localhost:4000/company/signup`,{\r\n              method: \"POST\",\r\n              headers: {\r\n                        Accept:  \"application/json\",\r\n                      \"Content-Type\": \"application/json\"\r\n              },\r\n              body: JSON.stringify({name,address1,address2,state,city,pincode,gstin})\r\n            }).then(response => response.json());\r\n\r\n            return response;\r\n\r\n  }catch(error){\r\n          console.log(error.message)\r\n          return {error : error.message};\r\n  }\r\n}\r\n\r\nasync function SignupUser(name, email, password, role, company) {\r\n    try{\r\n      const response = await fetch(`http://localhost:4000/user/signup`,{\r\n              method: \"POST\",\r\n              headers: {\r\n                        Accept:  \"application/json\",\r\n                      \"Content-Type\": \"application/json\"\r\n              },\r\n              body: JSON.stringify({name, email, password, role, company})\r\n            }).then(response => response.json());\r\n            return response;\r\n        } catch(error) {\r\n          console.log(error.message);\r\n          return {error : error.message};\r\n        }\r\n      }\r\n\r\nasync function LoginUser(dispatch, email, password, history, setIsLoading, setError) {\r\n  setError(false);\r\n  setIsLoading(true);\r\n\r\n  try{\r\n      const data = await fetch(`http://localhost:4000/user/login`,{\r\n                      method: \"POST\",\r\n                      headers: {\r\n                                Accept:  \"application/json\",\r\n                              \"Content-Type\": \"application/json\"\r\n                      },\r\n                      body: JSON.stringify({email, password})\r\n                    }).then(response => response.json()) ;\r\n            if(data.error){\r\n              console.log(\":errorr\");\r\n              throw new Error();\r\n            }else {\r\n               localStorage.setItem('TOKEN', JSON.stringify(data));\r\n            setError(false)\r\n            setIsLoading(false)\r\n          // setVisitsUser(VisitsUser +1);\r\n          // console.log(\"set users : \" +VisitsUser);\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n              \r\n            history.push('/app/dashboard')\r\n        return(\r\n          setError(true),\r\n          setIsLoading(false) \r\n        )\r\n      }     \r\n  }catch(error) {\r\n    console.log(\"catch\");\r\n    dispatch({ type: \"LOGIN_FAILURE\" });\r\n    setError(true);\r\n    setIsLoading(false) \r\n  }\r\n}\r\n\r\nfunction signOut(dispatch, history) {\r\n  localStorage.removeItem(\"TOKEN\");\r\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\r\n  history.push(\"/login\");\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n  if(typeof window == 'undefined') {\r\n      return false\r\n    }\r\n   if(localStorage.getItem(\"TOKEN\")) {\r\n       return JSON.parse(localStorage.getItem('TOKEN'))\r\n       } else{\r\n           return false\r\n       }\r\n} \r\n\r\nexport const GroupRegistration = async(contacts, name, user, token) => {\r\n  try{\r\n    const response = await fetch(`http://localhost:4000/group/signup`,{\r\n          method: \"POST\",\r\n          headers: {\r\n                  \"Authorization\" : `${token}`,\r\n                  \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({user, name, contacts})\r\n        }).then(response => response.json());\r\n\r\n        return response;\r\n  }catch(error) {\r\n    console.log(error.message);\r\n    return {error : error.message}\r\n  }\r\n}\r\n\r\nexport const messageGroup = async(group, message, token) => {\r\n  try{\r\n    const response = await fetch(`http://localhost:4000/group/message`,{\r\n          method: \"POST\",\r\n          headers: {\r\n                  \"Authorization\" : `Bearer ${token}`,\r\n                  \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({group, message})\r\n        }).then(res => res.json());\r\n\r\n        console.log(\"response : \" +response.message);\r\n        return response.message;\r\n  }catch(error) {\r\n    console.log(error.message);\r\n    return {error : error.message}\r\n  }\r\n}\r\n\r\nexport const messageAllUsers = async(message, company_id, token) => {\r\n  try{\r\n    const response = await fetch(`http://localhost:4000/contact/message`,{\r\n          method: \"POST\",\r\n          headers: {\r\n                  \"Authorization\" : `Bearer ${token}`,\r\n                  \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({company_id, message})\r\n        }).then(res => res.json());\r\n\r\n        console.log(\"response : \" +response.message);\r\n        return response.message;\r\n  }catch(error) {\r\n    console.log(error.message);\r\n    return {error : error.message}\r\n  }\r\n}\r\n\r\nasync function messageUser(contact, message, token) {\r\n  try{\r\n    const response = await fetch(\"http://localhost:4000/user/message\", {\r\n            method: \"POST\",\r\n            headers: {\r\n            \"Authorization\" : `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\"\r\n              },\r\n            body: JSON.stringify({contact: contact, message: message})\r\n          }).then(res => res.json()) ;\r\n\r\n          console.log(\"response at messageUser : \" +response.message);\r\n\r\n          return response.message;\r\n    }catch(error){\r\n        console.log(error);\r\n  } \r\n}\r\n\r\n\r\n\r\n\r\nexport { UserProvider, useUserState, useUserDispatch,SignupUser,SignupCompany, LoginUser, signOut, messageUser };\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\context\\LayoutContext.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\App.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\themes\\index.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Layout\\Layout.js",["498","499","500","501","502","503"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\login\\Login.js",["504","505","506"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\nimport google from \"../../images/google.svg\";\r\n\r\n// context\r\nimport { useUserDispatch, LoginUser, SignupUser, SignupCompany } from \"../../context/UserContext\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [activeTabId, setActiveTabId] = useState(0);\r\n  \r\n  // const [nameValue, setNameValue] = useState(\"\");\r\n  const [emailValue, setEmailValue] = useState(\"parmarparth597@gmail.com\");\r\n  const [passwordValue, setPasswordValue] = useState(\"parthu\");\r\n  // const [signupEmailValue, setSignupEmailValue] = useState(\"\");\r\n  // const [signuppasswordValue, setSignupPasswordValue] = useState(\"\");\r\n  // const [roleValue , setRoleValue] = useState(\"\")\r\n  // const [companyValue, setCompanyValue] = useState(\"\")\r\n\r\n  const [forgotEmailValue, setForgotEmailValue] = useState(\"\")\r\n  const [forgotPasswordValue, setForgotPasswordValue] = useState(\"\")\r\n\r\n  // const [companyName, setCompanyName] = useState(\"Vistaura\")\r\n  // const [address1, setAddress1] = useState(\"202-A avadh residency\")\r\n  // const [address2, setAddress2] = useState(\" in yoginagar township\")\r\n  // const [state, setState] = useState(\"gujarat\")\r\n  // const [city, setCity] = useState(\"vadodara\")\r\n  // const [pincode, setPincode] = useState(\"390002\")\r\n  // const [gstin, setGstin] = useState(\"7865452\")\r\n\r\n  // const onClickHandler = (userDispatch,emailValue,passwordValue) => {\r\n  //     LoginUser(userDispatch,emailValue,passwordValue).then((err, data) => {\r\n  //       if(err){\r\n  //          console.log(\"Error : \" +data.error);\r\n  //          setError(true);\r\n  //          setIsLoading(false);\r\n  //       }else{\r\n  //          setError(true);\r\n  //          setIsLoading(false);\r\n  //          setVisitUsers(visitUsers + 1);\r\n  //          console.log(visitUsers);\r\n  //         <Dashboard visitedUsers={visitUsers} />;\r\n  //          localStorage.setItem('TOKEN', JSON.stringify(data));\r\n  //          props.history.push('/app/dashboard')\r\n  //       }\r\n  //     })\r\n  //  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>  USERS  </Typography>\r\n      </div>\r\n\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\r\n          </Tabs>\r\n\r\n         {/* //////////////////////LOGIN///////////////////////   */}\r\n          {activeTabId === 0 && (\r\n            <React.Fragment>\r\n              {new Date().getHours() <= 12 ? \r\n              <Typography variant=\"h1\" className={classes.greeting}>\r\n                Good Morning, User \r\n              </Typography>     : \r\n              (\r\n                new Date().getHours() > 12 && new Date().getHours() <= 17 ?\r\n                <Typography variant=\"h1\" className={classes.greeting}>\r\n                  Good Afternoon, User \r\n                </Typography>       :\r\n                <Typography variant=\"h1\" className={classes.greeting}>\r\n                 Good Evening, User \r\n            </Typography>\r\n              ) }\r\n              \r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={emailValue}\r\n                onChange={e => setEmailValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                    <Button\r\n                      disabled={\r\n                        emailValue.length === 0 || passwordValue.length === 0\r\n                      }\r\n                      onClick={() =>\r\n                        LoginUser(\r\n                          userDispatch,\r\n                          emailValue,\r\n                          passwordValue,\r\n                          props.history,\r\n                          setIsLoading,\r\n                          setError,\r\n                        )\r\n                      }\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"large\" >\r\n                      Login\r\n                    </Button>\r\n                )}\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.forgetButton}\r\n                  onClick = { () => setActiveTabId(2)}\r\n                >\r\n                  Forget Password\r\n                </Button>\r\n              </div>\r\n\r\n              <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} />\r\n            </div>\r\n            <Button size=\"large\" className={classes.googleButton}>\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n            </Button>\r\n            </React.Fragment>\r\n          )}\r\n\r\n      {/* ////////////////////////// FORGET PASSWORD /////////////////////////// */}\r\n      {activeTabId === 3 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                Forgot your account ? \r\n              </Typography>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  User Does not Exist  :(\r\n                </Typography>\r\n              </Fade>\r\n              \r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={forgotEmailValue}\r\n                onChange={e => setForgotEmailValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={forgotEmailValue}\r\n                onChange={e => setForgotPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n            \r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      LoginUser(\r\n                        userDispatch,\r\n                        forgotEmailValue,\r\n                        forgotPasswordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    disabled={\r\n                      forgotEmailValue.length === 0 ||\r\n                      forgotPasswordValue.length === 0 \r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Password Reset\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              \r\n            </React.Fragment>\r\n          )}\r\n\r\n        </div> <br></br>\r\n        <Typography color=\"primary\" className={classes.copyright}>\r\n        © 2020-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://www.vistaura.com/\" rel=\"noopener noreferrer\" target=\"_blank\"> Vistaura </a>, LLC. All rights reserved.\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\error\\Error.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\themes\\default.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\error\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\login\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Layout\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\Users.js",["507","508","509","510","511","512","513","514"],"import React,{useEffect, useState} from \"react\";\r\nimport { Grid, Button} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {\r\n  Edit as EditIcon,\r\n} from \"@material-ui/icons\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\nimport {isAuthenticated} from \"../../context/UserContext\"\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\nimport { propTypes } from \"qrcode.react\";\r\n\r\n// const datatableData = [\r\n//   [ \"Vistaura\", \"Joe James\", \"parth@gmail.com\",  \"User\", \"16:25\", \"19:35\", <EditIcon/> ],\r\n//   [ \"Vistaura\", \"John Walsh\", \"parth@gmail.com\", \"User\", \"16:25\", \"19:35\", <EditIcon/> ],\r\n//   [ \"Vistaura\", \"Bob Herm\", \"parth@gmail.com\", \"User\", \"16:25\", \"19:35\",  <EditIcon/>],\r\n//   [ \"Vistaura\", \"James Houston\", \"parth@gmail.com\", \"User\", \"16:25\", \"19:35\", <EditIcon/> ],\r\n//   [ \"Vistaura\", \"Prabhakar Linwood\", \"parth@gmail.com\", \"User\", \"16:25\", \"19:35\", <EditIcon/> ],\r\n//   [ \"Vistaura\", \"Kaui Ignace\", \"parth@gmail.com\", \"User\", \"16:25\", \"19:35\", <EditIcon/> ],\r\n//   [ \"Vistaura\", \"Esperanza Susanne\", \"parth@gmail.com\", \"User\", \"16:25\", \"19:35\", <EditIcon/> ],\r\n//   [ \"Vistaura\", \"Christian Birgitte\", \"parth@gmail.com\", \"User\", \"16:25\", \"19:35\", <EditIcon/> ],\r\n//   [ \"Vistaura\", \"Meral Elias\", \"parth@gmail.com\", \"User\", \"16:25\", \"19:35\", <EditIcon/> ],\r\n//   [ \"Vistaura\", \"Deep Pau\", \"parth@gmail.com\", \"User\", \"16:25\", \"19:35\", <EditIcon/> ],\r\n//   [ \"Vistaura\", \"Sebastiana Hani\", \"parth@gmail.com\", \"User\", \"16:25\", \"19:35\", <EditIcon/> ],\r\n//   [ \"Vistaura\", \"Marciano Oihana\", \"parth@gmail.com\", \"User\", \"16:25\", \"19:35\", <EditIcon/> ],\r\n//   [ \"Vistaura\", \"Brigid Ankur\", \"parth@gmail.com\", \"User\", \"16:25\", \"19:35\", <EditIcon/> ],\r\n//   [ \"Vistaura\", \"Anna Siranush\", \"parth@gmail.com\", \"User\", \"16:25\", \"19:35\", <EditIcon/> ],\r\n//   [ \"Vistaura\", \"Avram Sylva\", \"parth@gmail.com\", \"User\", \"16:25\", \"19:35\", <EditIcon/>],\r\n//   [ \"Vistaura\", \"Serafima Babatunde\", \"parth@gmail.com\", \"User\", \"16:25\", \"19:35\", <EditIcon/> ],\r\n//   [ \"Vistaura\", \"Gaston Festus\", \"parth@gmail.com\", \"User\", \"16:25\", \"19:35\", <EditIcon/> ],\r\n// ];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableOverflow: {\r\n    overflow: 'auto'\r\n  }\r\n}))\r\n\r\nconst Tables = (props) => {\r\n\r\nconst [dataa, setDataa] = useState([]);\r\nconst [companyDataa, setCompanyDataa] = useState([]);\r\nconst {token} = isAuthenticated();\r\n\r\n  const usersData = () => {\r\n     fetch(\"http://localhost:4000/users\",{\r\n        method: \"GET\",\r\n        headers: {\r\n        \"Authorization\" : `Bearer ${token}`\r\n          }\r\n      }).then(res => res.json()).then(resp => (setDataa(resp.user), setCompanyDataa(resp.company) ))\r\n  }\r\n\r\nuseEffect(() => { \r\n    usersData();\r\n      }, []);\r\n\r\nconst isAuth =  JSON.parse(localStorage.getItem('TOKEN'));\r\n\r\n  const classes = useStyles();\r\n      console.log(dataa);\r\n\r\n      let datatableData = [];\r\n      dataa.forEach(element => {\r\n        datatableData.push([\r\n          [`${element.company}`], [`${element.name}`], [`${element.email}`], [`${element.role}`] ,   [`${element.createdAt}`], [`${element.modifiedAt}`], [ <EditIcon/> ]\r\n          ]) }) \r\n      const columns = [\"Company\" , \"Name\", \"Email\", \"Role\", \"Created At\", \"Modified At\", \"Edit\"]; \r\n      \r\n      const addUserHandler = () => {\r\n          props.history.push(\"/app/user/register\");\r\n      }\r\n\r\n      const addCompanyHandler = () => {\r\n        props.history.push(\"/app/company/register\");\r\n    }\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Users\" />\r\n      <Button\r\n          onClick={addUserHandler}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\" >\r\n          Add User \r\n      </Button>\r\n     {isAuth.user.role === \"admin\" ?  <Button\r\n          onClick={addCompanyHandler}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"large\" >\r\n          Add Company \r\n      </Button> : null }\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n            title=\"Users List\"\r\n            data={datatableData}\r\n            columns={columns}\r\n            options={{\r\n              filterType: \"checkbox\",\r\n            }}\r\n          />\r\n        </Grid>\r\n        {/* <Grid item xs={12}>\r\n          <Widget title=\"Users List Sent By Email\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid> */}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default Tables;","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\Message.js",["515","516","517","518","519","520","521","522","523","524"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\charts\\Charts.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\icons\\Icons.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\notifications\\Notifications.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\Dashboard.js",["525","526"],"import React, { useState } from \"react\";\r\nimport LoginUser from \"../../context/UserContext\"\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport Table from \"./components/Table/Table\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\n\r\nconst mainChartData = getMainChartData();\r\nconst PieChartData = [\r\n  { name: \"Group A\", value: 400, color: \"primary\" },\r\n  { name: \"Group B\", value: 300, color: \"secondary\" },\r\n  { name: \"Group C\", value: 300, color: \"warning\" },\r\n  { name: \"Group D\", value: 200, color: \"success\" },\r\n];\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Dashboard\" button={<Button\r\n      variant=\"contained\"\r\n      size=\"medium\"\r\n      color=\"secondary\"\r\n    >\r\n        Latest Reports\r\n    </Button>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Visits Today\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n\r\n              </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n              <LineChart\r\n                width={110}\r\n                height={70}\r\n                data={[\r\n                  { value: 10 },\r\n                  { value: 15 },\r\n                  { value: 12 },\r\n                  { value: 18 },\r\n                  { value: 17 },\r\n                ]}\r\n              >\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"value\"\r\n                  stroke={theme.palette.success.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                />\r\n              </LineChart>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Registrations\r\n                </Typography>\r\n                <Typography size=\"md\">860</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Sign Out\r\n                </Typography>\r\n                <Typography size=\"md\">32</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Rate\r\n                </Typography>\r\n                <Typography size=\"md\">3.25%</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"App Performance\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.performanceLegendWrapper}>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"warning\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  Integration\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"primary\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  SDK\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.progressSection}>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                Integration\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={77}\r\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                SDK\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={73}\r\n                classes={{ barColorPrimary: classes.progressBarWarning }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n    \r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <ResponsiveContainer width=\"100%\" height={144}>\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={PieChartData}\r\n                      innerRadius={30}\r\n                      outerRadius={40}\r\n                      dataKey=\"value\"\r\n                    >\r\n                      {PieChartData.map((entry, index) => (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={theme.palette[entry.color].main}\r\n                        />\r\n                      ))}\r\n                    </Pie>\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div className={classes.pieChartLegendWrapper}>\r\n                  {PieChartData.map(({ name, value, color }, index) => (\r\n                    <div key={color} className={classes.legendItemContainer}>\r\n                      <Dot color={color} />\r\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\r\n                        &nbsp;{name}&nbsp;\r\n                      </Typography>\r\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                        &nbsp;{value}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  Daily Line Chart\r\n                </Typography>\r\n                <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"warning\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Tablet\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Mobile\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Desktop\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <Select\r\n                  value={mainChartState}\r\n                  onChange={e => setMainChartState(e.target.value)}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={0}\r\n                      classes={{\r\n                        notchedOutline: classes.mainChartSelectRoot,\r\n                        input: classes.mainChartSelect,\r\n                      }}\r\n                    />\r\n                  }\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"daily\">Daily</MenuItem>\r\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                </Select>\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n              <ComposedChart\r\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\r\n                data={mainChartData}\r\n              >\r\n                <YAxis\r\n                  ticks={[0, 2500, 5000, 7500]}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <XAxis\r\n                  tickFormatter={i => i + 1}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <Area\r\n                  type=\"natural\"\r\n                  dataKey=\"desktop\"\r\n                  fill={theme.palette.background.light}\r\n                  strokeWidth={0}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"mobile\"\r\n                  stroke={theme.palette.primary.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"linear\"\r\n                  dataKey=\"tablet\"\r\n                  stroke={theme.palette.warning.main}\r\n                  strokeWidth={2}\r\n                  dot={{\r\n                    stroke: theme.palette.warning.dark,\r\n                    strokeWidth: 2,\r\n                    fill: theme.palette.warning.main,\r\n                  }}\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n        {mock.bigStat.map(stat => (\r\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\r\n            <BigStat {...stat} />\r\n          </Grid>\r\n        ))}\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            title=\"Support Requests\"\r\n            upperTitle\r\n            noBodyPadding\r\n            bodyClass={classes.tableWidget} >\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\maps\\Maps.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\Sidebar.js",["527","528","529","530","531"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Header\\Header.js",["532","533"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\mock.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Widget\\Widget.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\icons\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\charts\\components\\ApexLineChart.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\maps\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Header\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\notifications\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Notification\\Notification.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Widget\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\PageTitle\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Notification\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\UserAvatar\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\contacts.js",["534","535","536","537","538","539","540"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\components\\contactsTable\\contactsTable.js",[],["541","542"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\contacts\\contacts.js",["543"],"import React from \"react\";\r\nimport { Grid} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {\r\n  Edit as EditIcon,\r\n} from \"@material-ui/icons\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport Table from \"../dashboard/components/contactsTable/contactsTable\";\r\n\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableOverflow: {\r\n    overflow: 'auto'\r\n  }\r\n}))\r\n\r\nexport default function Tables() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Contacts\" />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Widget title=\"All Contacts\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n            <Table data={mock.contacts} />\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\components\\contactsTable\\contactsTable.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\profile\\profile.js",["544","545","546","547","548"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\profile\\profile.js",["549","550","551","552","553"],"import React, {useState} from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport {isAuthenticated } from \"../../context/UserContext\"\r\nimport {\r\n    Person as AccountIcon,\r\n  } from \"@material-ui/icons\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\n\r\n\r\nexport default function MessagePage() {\r\n  var classes = useStyles();\r\n\r\n  const {user, token, companyName} = isAuthenticated();\r\n\r\n   // local\r\n   var [isLoading, setIsLoading] = useState(false);\r\n   var [error, setError] = useState(null);\r\n  //  var [contactValue, setContactValue] = useState(\"\")\r\n  //  var [messageValue, setMessageValue] = useState(\"\")\r\n \r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Profile\" />\r\n      <Grid container spacing={4} >\r\n        \r\n        <Grid item md={3/7} >\r\n          <Widget title=\"USER PROFILE\" disableWidgetMenu  >\r\n                <AccountIcon  className={classes.sizeOfFont} />\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={8}>\r\n          <Widget title=\"USER DETAILS\" disableWidgetMenu>\r\n            <div className={classes.dashedBorder} >\r\n              <Typography size=\"md\"> Name  : {user.name}</Typography>\r\n              <Typography size=\"md\"> Company : {companyName}</Typography>\r\n              <Typography size=\"md\"> Role  : {user.role}</Typography>\r\n              <Typography size=\"md\"> Email : {user.email}</Typography>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\profile\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\profile\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\UserRegister.js",["554","555","556","557"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// context\r\nimport { useUserDispatch, SignupUser } from \"../../context/UserContext\";\r\n\r\nfunction UserRegister(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role , setRole] = useState(\"\")\r\n  const [allcompany, setAllCompany] = useState([])\r\n  const [company, setCompany] = useState([])\r\n\r\nconst isAuth =  JSON.parse(localStorage.getItem('TOKEN'));\r\n\r\nconst companies = async() => {\r\n  const company = await fetch(\"http://localhost:4000/companies\",{\r\n                  method: \"GET\",\r\n                  headers: {\r\n                        \"Authorization\": `${isAuth.token}`,\r\n                        \"Content-Type\": \"application/json\"\r\n                }\r\n              }).then(response => response.json());\r\n\r\n    // console.log(\"company : \" +JSON.stringify(company));\r\n    setAllCompany(company);\r\n    setIsLoading(false);\r\n}\r\n\r\nuseEffect(() => {\r\n    companies();\r\n  }, [])\r\n\r\n  const userSignup = async(name, email, password, role, company) => {\r\n    setIsLoading(true);\r\n    console.log(\"name : \" +name);\r\n    console.log(\"email : \" +email);\r\n    console.log(\"password : \" +password);\r\n    console.log(\"role : \" +role);\r\n    console.log(\"company : \" +company);\r\n\r\n        await SignupUser(name, email, password, role, company).then(response => {\r\n        if(response.error) {\r\n            setError(response.error);\r\n            setIsLoading(false);\r\n        }else{\r\n          setCompany(\"\");\r\n          setRole(\"\");\r\n          setPassword(\"\");\r\n          setEmail(\"\");\r\n          setName(\"\");\r\n          setError(false);\r\n          setIsLoading(false);\r\n        }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n      \r\n        {/* ///////////////////Signup User///////////////////// */}\r\n            <React.Fragment>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                Create Account\r\n              </Typography>\r\n              {error && error.length > 6 ? (\r\n                <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                    {error}\r\n                </Typography>\r\n              </Fade>    \r\n              )  : \r\n                <Fade in={error}>\r\n                  <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                    Something is wrong with your login or password :(\r\n                  </Typography>\r\n                </Fade>\r\n              }\r\n              \r\n              <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Full Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n\r\n            {isAuth.user.role === \"user\" ? \r\n               <div>\r\n               <InputLabel id=\"role\"> Role </InputLabel>\r\n                 <Select labelId=\"role\" id=\"role\"  onChange={e => setRole(e.target.value)}   InputProps={{\r\n                   classes: {\r\n                     underline: classes.textFieldUnderline,\r\n                     input: classes.textField,\r\n                   },\r\n                 }}>\r\n                   <MenuItem value={isAuth.user.role} > {isAuth.user.role}  </MenuItem>\r\n                 </Select> \r\n               </div>        :\r\n\r\n              <div>\r\n                <InputLabel id=\"role\"> Role </InputLabel>\r\n                <Select labelId=\"role\" id=\"role\"  onChange={e => setRole(e.target.value)}   InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}>\r\n                  <MenuItem value=\"user\" > User  </MenuItem>\r\n                  <MenuItem value=\"admin\" > Admin  </MenuItem>\r\n                </Select> \r\n              </div>\r\n            } <br/><br/>\r\n\r\n            {isAuth.user.role === \"user\" ?\r\n              <div>\r\n                <InputLabel id=\"company\"> Company </InputLabel>\r\n                  <Select labelId=\"company\" id=\"company\"  onChange={e => setCompany(e.target.value)}   InputProps={{\r\n                    classes: {\r\n                      underline: classes.textFieldUnderline,\r\n                      input: classes.textField,\r\n                    },\r\n                  }}>\r\n                    <MenuItem value={isAuth.user.company} > {isAuth.companyName}  </MenuItem>\r\n                  </Select> \r\n                </div>  : \r\n                  (  <div>\r\n                        <InputLabel id=\"company\"> Company </InputLabel>\r\n                        <Select labelId=\"company\" id=\"company\"  onChange={e => setCompany(e.target.value)}   InputProps={{\r\n                            classes: {\r\n                              underline: classes.textFieldUnderline,\r\n                              input: classes.textField,\r\n                            },\r\n                          }}>\r\n                          {allcompany && allcompany.map((comp, i) => {\r\n                            return <MenuItem value={comp._id} key={i}> {comp.name} </MenuItem>\r\n                          })}\r\n                        </Select> \r\n                      </div> )\r\n                  }\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      userSignup(\r\n                        name,\r\n                        email,\r\n                        password,\r\n                        role,\r\n                        company,\r\n                      )\r\n                    }\r\n                    disabled={\r\n                      email.length === 0 ||\r\n                      password.length === 0 ||\r\n                      name.length === 0 ||\r\n                      role.length === 0 ||\r\n                      company.length === 0 \r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Create your account\r\n                  </Button>\r\n                )}\r\n              </div>\r\n             \r\n              {/* <Button\r\n                size=\"large\"\r\n                className={classnames(\r\n                  classes.googleButton,\r\n                  classes.googleButtonCreating,\r\n                )}\r\n              >\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button> */}\r\n            </React.Fragment>\r\n\r\n        </div> <br></br>\r\n        <Typography color=\"primary\" className={classes.copyright}>\r\n        © 2020-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://www.vistaura.com/\" rel=\"noopener noreferrer\" target=\"_blank\"> Vistaura </a>, LLC. All rights reserved.\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(UserRegister);\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\CompanyRegister.js",["558","559","560","561","562"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Fade,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// context\r\nimport { useUserDispatch, SignupCompany } from \"../../context/UserContext\";\r\n\r\nfunction CompanyRegister(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  const [company, setCompany] = useState(\"\")\r\n\r\n  const [address1, setAddress1] = useState(\"202-A avadh residency\")\r\n  const [address2, setAddress2] = useState(\" in yoginagar township\")\r\n  const [state, setState] = useState(\"gujarat\")\r\n  const [city, setCity] = useState(\"vadodara\")\r\n  const [pincode, setPincode] = useState(\"390002\")\r\n  const [gstin, setGstin] = useState(\"7865452\")\r\n\r\n  const companyRegister = async(company, address1, address2, state, city, pincode, gstin) => {\r\n    await SignupCompany(company, address1, address2, state, city, pincode, gstin).then(response => {\r\n      if(response.error) {\r\n        setError(response.error);\r\n        setIsLoading(false);\r\n      }else{\r\n        setCompany(\"\");\r\n        setAddress1(\"\");\r\n        setAddress2(\"\");\r\n        setState(\"\");\r\n        setCity(\"\");\r\n        setPincode(\"\");\r\n        setGstin(\"\");\r\n        setError(false);\r\n        setIsLoading(false);\r\n        props.history.push(\"/app/users\");\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n\r\n           {/* ///////////////////Signup Company///////////////////// */}\r\n            <React.Fragment>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                Company\r\n              </Typography>\r\n\r\n              <Fade in={isLoading}>\r\n                  <CircularProgress color=\"secondary\" />\r\n              </Fade>\r\n\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n\r\n              <TextField\r\n                id=\"Company\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={company}\r\n                onChange={e => setCompany(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Company\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"address1\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={address1}\r\n                onChange={e => setAddress1(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Address 1\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"address 2\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={address2}\r\n                onChange={e => setAddress2(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Address 2\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"state\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={state}\r\n                onChange={e => setState(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"State\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"city\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={city}\r\n                onChange={e => setCity(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"City\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"pincode\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={pincode}\r\n                onChange={e => setPincode(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Pincode\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"gstin\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={gstin}\r\n                onChange={e => setGstin(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"GSTIN\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n        \r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      companyRegister(\r\n                          company,\r\n                          address1,\r\n                          address2,\r\n                          state,\r\n                          city,\r\n                          pincode,\r\n                          gstin\r\n                        )\r\n                      }\r\n                    disabled={\r\n                      company.length === 0 ||\r\n                      address1.length === 0 ||\r\n                      state.length === 0 ||\r\n                      city.length === 0 ||\r\n                      pincode.length === 0\r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Create your account\r\n                  </Button>\r\n                )}\r\n              </div>\r\n             \r\n            </React.Fragment>\r\n        \r\n        </div> <br></br>\r\n        <Typography color=\"primary\" className={classes.copyright}>\r\n        © 2020-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://www.vistaura.com/\" rel=\"noopener noreferrer\" target=\"_blank\"> Vistaura </a>, LLC. All rights reserved.\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(CompanyRegister);\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\addContact.js",["563","564"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Fade,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import isAuthenticated}\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\nfunction AddContacts(props) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [allcompany, setAllCompany] = useState([]);\r\n  const [company, setCompany] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [countrycode, setCountryCode] = useState(\"\");\r\n  const [email , setEmail] = useState(\"\")\r\n \r\n  const addContactsHandler = async(company,mobile,countrycode,email) => {\r\n       setIsLoading(true);\r\n     const contactRegister = await fetch(`http://localhost:4000/contact/signup`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                      Accept:  \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({company ,mobile_number : mobile, country_code : countrycode, email})\r\n          }).then(response => response.json());\r\n\r\n    console.log(\"contactRegister :\" +contactRegister);\r\n    setIsLoading(false);\r\n    window.location.reload();\r\n    // props.history.push(\"/app/contacts\");\r\n  }\r\n\r\nconst isAuth =  JSON.parse(localStorage.getItem('TOKEN'));\r\n\r\n  const companies = async() => {\r\n    const company = await fetch(\"http://localhost:4000/companies\",{\r\n                    method: \"GET\",\r\n                    headers: {\r\n                          \"Authorization\": `${isAuth.token}`,\r\n                          \"Content-Type\": \"application/json\"\r\n                  }\r\n                }).then(response => response.json());\r\n  \r\n      // console.log(\"company : \" +JSON.stringify(company));\r\n      setAllCompany(company);\r\n      setIsLoading(false);\r\n  }\r\n  \r\n  useEffect(() => {\r\n      companies();\r\n    }, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>     \r\n\r\n        {/* ///////////////////Signup User///////////////////// */}\r\n            <React.Fragment>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                <u> Contacts </u>\r\n              </Typography>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              {isAuth.user.role === \"user\" ?\r\n                  <div>\r\n                  <InputLabel id=\"company\"> Company </InputLabel>\r\n                    <Select labelId=\"company\" id=\"company\" onChange={e => setCompany(e.target.value)} InputProps={{\r\n                      classes: {\r\n                        underline: classes.textFieldUnderline,\r\n                        input: classes.textField,\r\n                      },\r\n                    }}>\r\n                      <MenuItem  value={isAuth.user.company}> {isAuth.companyName}  </MenuItem>\r\n                    </Select> \r\n                </div>    :\r\n                        (  <div>\r\n                            <InputLabel id=\"company\"> Company </InputLabel>\r\n                            <Select labelId=\"company\" id=\"company\" value={isAuth.user.company}  onChange={e => setCompany(e.target.value)} InputProps={{\r\n                                classes: {\r\n                                  underline: classes.textFieldUnderline,\r\n                                  input: classes.textField,\r\n                                },\r\n                              }}>\r\n                              {allcompany && allcompany.map((comp, i) => {\r\n                                return <MenuItem value={comp._id} key={i}> {comp.name} </MenuItem>\r\n                              })}\r\n                            </Select> \r\n                          </div> )\r\n              }\r\n              <TextField\r\n                id=\"mobile\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={mobile}\r\n                onChange={e => setMobile(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Mobile_Number\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"Countrycode\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={countrycode}\r\n                onChange={e => setCountryCode(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Country_code\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"email\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      addContactsHandler(\r\n                            company,\r\n                            mobile,\r\n                            countrycode,\r\n                            email\r\n                           )\r\n                        }\r\n                    disabled={\r\n                      company.length === 0 ||\r\n                      email.length === 0 ||\r\n                      mobile.length === 0 ||\r\n                      countrycode.length === 0 \r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}  >\r\n                    Create Contact\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            \r\n            </React.Fragment>\r\n\r\n        </div> <br></br>\r\n        <Typography color=\"primary\" className={classes.copyright}>\r\n        © 2020-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://www.vistaura.com/\" rel=\"noopener noreferrer\" target=\"_blank\"> Vistaura </a>, LLC. All rights reserved.\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(AddContacts);\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\createGroups.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\PersonalMessage.js",["565"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\allContactMessage.js",["566"],"import React, {useState, useEffect} from \"react\";\r\nimport { Grid ,TextField,  Button,\r\n  CircularProgress,\r\n  Fade,} from \"@material-ui/core\";\r\nimport QRCode from \"qrcode.react\";\r\n// import QRReader from \"react-qr-scanner\";\r\nimport {messageAllUsers} from \"../../context/UserContext\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\n\r\nexport default function AllContacts() {\r\n  var classes = useStyles();\r\n\r\n   // local\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [error, setError] = useState(null);\r\n   const [response, setResponse] = useState(\"\");\r\n//    const [contactValue, setContactValue] = useState(\"\");\r\n   const [messageValue, setMessageValue] = useState(\"\");\r\n   const [showQr , setShowQr] = useState(true);\r\n   const [showMessage , setShowMessage] = useState(\"\");\r\n\r\nconst isAuth =  JSON.parse(localStorage.getItem('TOKEN'));\r\n\r\n  \r\n  const QrCodeHandler = async() => {\r\n        try{\r\n          setIsLoading(true);\r\n          const response = await fetch(\"http://localhost:4000/contact/auth\", {\r\n                  method: \"GET\",\r\n                  headers: {\r\n                  \"Authorization\" : `Bearer ${isAuth.token}`,\r\n                  \"Content-Type\": \"application/json\"\r\n                    }\r\n                }).then(res => res.json()) \r\n    \r\n                response.length > 1 ?  console.log(\"response of qrcodeHandler : \" +response) : console.log(\"user authenticated\")\r\n                response.length > 1 ? setResponse(response) : setResponse(\"User authenticated\");\r\n                setIsLoading(false);\r\n                setShowQr(false);\r\n          }catch(error){\r\n              console.log(error);\r\n              setError(true);\r\n              setIsLoading(false);\r\n        } \r\n  }\r\n\r\n  const messageAllHandler = (message) => {\r\n    try{\r\n      setIsLoading(true);\r\n      messageAllUsers(message, isAuth.user.company, isAuth.token).then((response) => {\r\n        console.log(\"response : \" +response);\r\n        if(response.error){\r\n            console.log(response.error);\r\n            setError(true);\r\n            setIsLoading(false);\r\n        }\r\n        if(response.includes(\"Sent\")) {\r\n          setResponse(\"\");\r\n          setMessageValue(\"\");\r\n          setError(false);\r\n          setIsLoading(false);\r\n          setShowMessage(response);\r\n         }else{\r\n              setMessageValue(\"\");\r\n              setError(false);\r\n              setIsLoading(false);\r\n              setShowMessage(response);       \r\n          }\r\n\r\n        setTimeout(() => { \r\n          setShowMessage(\"\");\r\n          }, 4000);  \r\n    })\r\n   \r\n    }catch(error) {\r\n        setError(true);\r\n  }\r\n}\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Message\" />\r\n      <Grid container spacing={4}>\r\n        \r\n        <Grid item xs={12} md={8}>\r\n          <Widget title=\"SEND MESSAGE\" disableWidgetMenu>\r\n          { isLoading ? (<Fade in={isLoading}>\r\n            <CircularProgress color=\"secondary\" />\r\n          </Fade>) : null }\r\n          <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                    Please fill the credentials properly  :(\r\n                </Typography>\r\n          </Fade>\r\n\r\n        { showQr ? \r\n               <Button\r\n               onClick={QrCodeHandler}\r\n               variant=\"contained\"\r\n               color=\"primary\"\r\n               size=\"large\"\r\n             >\r\n                Show QR Code \r\n             </Button>  : \r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                id=\"message\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={messageValue}\r\n                onChange={e => setMessageValue(e.target.value)}\r\n                // disabled = {response.length > 1}\r\n                margin=\"normal\"\r\n                placeholder=\"Message\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n            <div className={classes.formButtons}>\r\n                  <Button\r\n                    disabled={\r\n                     messageValue.length === 0 \r\n                    }\r\n                    onClick={() =>\r\n                      messageAllHandler(\r\n                        messageValue\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                     Send \r\n                  </Button>\r\n                {showMessage.length > 15 ? \r\n                       <Typography color=\"secondary\" noWrap>\r\n                          {showMessage}\r\n                       </Typography>   :\r\n\r\n                        <Typography color=\"primary\" noWrap>\r\n                        {showMessage}\r\n                    </Typography> }\r\n\r\n              </div>\r\n          </form>  } \r\n          </Widget>\r\n        </Grid>\r\n      \r\n      {response.length >= 25 ? \r\n        (<Grid item xs={12} md={4}>\r\n          <Widget title=\"QR CODE GENERATOR\" disableWidgetMenu>\r\n            <div className={classes.dashedBorder}>\r\n              {isLoading ? <CircularProgress color=\"secondary\" /> : ( response.length >= 25 ? <QRCode value={response} size={256} />  : (<Typography color=\"secondary\"> {response.user} </Typography> )  ) } \r\n            </div> \r\n          </Widget>\r\n        </Grid>) : null }\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\groupMessage.js",["567","568"],"import React, {useState, useEffect} from \"react\";\r\nimport { Grid ,TextField,  Button,\r\n  CircularProgress,\r\n  Fade,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem} from \"@material-ui/core\";\r\nimport QRCode from \"qrcode.react\";\r\n// import QRReader from \"react-qr-scanner\";\r\nimport { messageGroup, isAuthenticated } from \"../../context/UserContext\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\n\r\nexport default function GroupMessage() {\r\n  var classes = useStyles();\r\n\r\n   // local\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [error, setError] = useState(null);\r\n   const [response, setResponse] = useState(\"\");\r\n   const [messageValue, setMessageValue] = useState(\"\");\r\n   const [showQr , setShowQr] = useState(true);\r\n   const [showMessage , setShowMessage] = useState(\"\");\r\n   const [allgroups , setAllGroups] = useState([]);\r\n   const [group , setGroup] = useState(\"\");\r\n\r\nconst isAuth =  JSON.parse(localStorage.getItem('TOKEN'));\r\n  \r\n  const allGroups = async() => {\r\n    try{\r\n        setIsLoading(true);\r\n        const allGroups = await fetch(\"http://localhost:4000/groups\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                \"Authorization\" : `Bearer ${isAuth.token}`,\r\n                \"Content-Type\": \"application/json\"\r\n                  }\r\n              }).then(res => res.json()) \r\n  \r\n              console.log(\"allGroups : \" +JSON.stringify(allGroups));\r\n              setIsLoading(false);\r\n              setAllGroups(allGroups);\r\n        }catch(error){\r\n            console.log(error);\r\n      } \r\n  }\r\n  useEffect(() => {\r\n    allGroups();\r\n  }, []);\r\n\r\n  const QrCodeHandler = async() => {\r\n        try{\r\n          setIsLoading(true);\r\n          const response = await fetch(\"http://localhost:4000/group/auth\", {\r\n                  method: \"GET\",\r\n                  headers: {\r\n                  \"Authorization\" : `Bearer ${isAuth.token}`,\r\n                  \"Content-Type\": \"application/json\"\r\n                    }\r\n                }).then(res => res.json()) \r\n    \r\n                response.length > 1 ?  console.log(\"response of qrcodeHandler : \" +response) : console.log(\"user authenticated\")\r\n                response.length > 1 ? setResponse(response) : setResponse(\"User authenticated\");\r\n                setIsLoading(false);\r\n                setShowQr(false);\r\n          }catch(error){\r\n              console.log(error);\r\n              setError(true);\r\n              setIsLoading(false);\r\n        } \r\n  }\r\n\r\n  const messageGroupHandler = (group, message) => {\r\n    try{\r\n      setIsLoading(true);\r\n      messageGroup(group, message, isAuth.token).then((response) => {\r\n        console.log(\"response : \" +response);\r\n        if(response.error){\r\n            console.log(response.error);\r\n            setError(true);\r\n            setIsLoading(false);\r\n        }\r\n        if(response.includes(\"Sent\")) {\r\n          setResponse(\"\");\r\n          setMessageValue(\"\");\r\n          setError(false);\r\n          setIsLoading(false);\r\n          setShowMessage(response);\r\n         }else{\r\n              setMessageValue(\"\");\r\n              setError(false);\r\n              setIsLoading(false);\r\n              setShowMessage(response);       \r\n          }\r\n\r\n        setTimeout(() => { \r\n          setShowMessage(\"\");\r\n          }, 4000);  \r\n    })\r\n   \r\n    }catch(error) {\r\n        setError(true);\r\n  }\r\n}\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Message\" />\r\n      <Grid container spacing={4}>\r\n        \r\n        <Grid item xs={12} md={8}>\r\n          <Widget title=\"SEND MESSAGE\" disableWidgetMenu>\r\n          { isLoading ? (<Fade in={isLoading}>\r\n            <CircularProgress color=\"secondary\" />\r\n          </Fade>) : null }\r\n          <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                    Please fill the credentials properly  :(\r\n                </Typography>\r\n          </Fade>\r\n\r\n        { showQr ? \r\n               <Button\r\n               onClick={QrCodeHandler}\r\n               variant=\"contained\"\r\n               color=\"primary\"\r\n               size=\"large\"\r\n             >\r\n                Show QR Code \r\n             </Button>  :\r\n\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <div>\r\n                        <InputLabel id=\"group\"> Company </InputLabel>\r\n                        <Select labelId=\"group\" id=\"group\"  onChange={e => setGroup(e.target.value)}   InputProps={{\r\n                            classes: {\r\n                              underline: classes.textFieldUnderline,\r\n                              input: classes.textField,\r\n                            },\r\n                          }}>\r\n                          {allgroups && allgroups.map((comp, i) => {\r\n                            return <MenuItem value={comp._id} key={i}> {comp.name} </MenuItem>\r\n                          })}\r\n                        </Select> \r\n                </div>\r\n        \r\n              <TextField\r\n                id=\"message\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={messageValue}\r\n                onChange={e => setMessageValue(e.target.value)}\r\n                // disabled = {response.length > 1}\r\n                margin=\"normal\"\r\n                placeholder=\"Message\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n            <div className={classes.formButtons}>\r\n                  <Button\r\n                    disabled={\r\n                        group.length === 0  || messageValue.length === 0 \r\n                    }\r\n                    onClick={() =>\r\n                      messageGroupHandler(\r\n                        group,\r\n                        messageValue,\r\n                        isAuth\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                     Send \r\n                  </Button>\r\n                {showMessage.length > 15 ? \r\n                       <Typography color=\"secondary\" noWrap>\r\n                          {showMessage}\r\n                       </Typography>   :\r\n\r\n                        <Typography color=\"primary\" noWrap>\r\n                        {showMessage}\r\n                    </Typography> }\r\n\r\n              </div>\r\n          </form>  } \r\n          </Widget>\r\n        </Grid>\r\n      \r\n      {response.length >= 25 ? \r\n        (<Grid item xs={12} md={4}>\r\n          <Widget title=\"QR CODE GENERATOR\" disableWidgetMenu>\r\n            <div className={classes.dashedBorder}>\r\n              {isLoading ? <CircularProgress color=\"secondary\" /> : ( response.length >= 25 ? <QRCode value={response} size={256} />  : (<Typography color=\"secondary\"> {response.user} </Typography> )  ) } \r\n            </div> \r\n          </Widget>\r\n        </Grid>) : null }\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\personalMessage.js",["569"],"import React, {useState, useEffect} from \"react\";\r\nimport { Grid ,TextField,  Button,\r\n  CircularProgress,\r\n  Fade,} from \"@material-ui/core\";\r\nimport QRCode from \"qrcode.react\";\r\n// import QRReader from \"react-qr-scanner\";\r\nimport { messageUser, isAuthenticated } from \"../../context/UserContext\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\n\r\nexport default function PersonalMessage() {\r\n  var classes = useStyles();\r\n\r\n   // local\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [error, setError] = useState(null);\r\n   const [response, setResponse] = useState(\"\");\r\n   const [contactValue, setContactValue] = useState(\"\");\r\n   const [messageValue, setMessageValue] = useState(\"\");\r\n   const [showQr , setShowQr] = useState(true);\r\n   const [showMessage , setShowMessage] = useState(\"\");\r\n  const  {token} = isAuthenticated();\r\n  \r\n  // useEffect(async() => {\r\n  //   try{\r\n  //     setIsLoading(true);\r\n  //     const response = await fetch(\"http://localhost:4000/users/auth\", {\r\n  //             method: \"GET\",\r\n  //             headers: {\r\n  //             \"Authorization\" : `Bearer ${token}`,\r\n  //             \"Content-Type\": \"application/json\"\r\n  //               }\r\n  //           }).then(res => res.json()) \r\n\r\n  //           setIsLoading(false);\r\n  //           setResponse(response);\r\n  //     }catch(error){\r\n  //         console.log(error);\r\n  //   } \r\n  // }, []);\r\n\r\n  const QrCodeHandler = async() => {\r\n        try{\r\n          setIsLoading(true);\r\n          const response = await fetch(\"http://localhost:4000/users/auth\", {\r\n                  method: \"GET\",\r\n                  headers: {\r\n                  \"Authorization\" : `Bearer ${token}`,\r\n                  \"Content-Type\": \"application/json\"\r\n                    }\r\n                }).then(res => res.json()) \r\n    \r\n                response.length > 1 ?  console.log(\"response of qrcodeHandler : \" +response) : console.log(\"user authenticated\")\r\n                response.length > 1 ? setResponse(response) : setResponse(\"User authenticated\");\r\n                setIsLoading(false);\r\n                setShowQr(false);\r\n          }catch(error){\r\n              console.log(error);\r\n              setError(true);\r\n              setIsLoading(false);\r\n        } \r\n  }\r\n\r\n  const messageUserHandler = (contact, message) => {\r\n    try{\r\n      setIsLoading(true);\r\n      messageUser(contact, message, token).then((response) => {\r\n        console.log(\"response : \" +response);\r\n        if(response.includes(\"Sent\")) {\r\n          setResponse(\"\");\r\n          setMessageValue(\"\");\r\n          setError(false);\r\n          setIsLoading(false);\r\n          setShowMessage(response);\r\n         }else{\r\n              setMessageValue(\"\");\r\n              setError(false);\r\n              setIsLoading(false);\r\n              setShowMessage(response);       \r\n          }\r\n\r\n        setTimeout(() => { \r\n          setShowMessage(\"\");\r\n          }, 4000);  \r\n    })\r\n   \r\n    }catch(error) {\r\n        setError(true);\r\n  }\r\n}\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Message\" />\r\n      <Grid container spacing={4}>\r\n        \r\n        <Grid item xs={12} md={8}>\r\n          <Widget title=\"SEND MESSAGE\" disableWidgetMenu>\r\n          { isLoading ? (<Fade in={isLoading}>\r\n            <CircularProgress color=\"secondary\" />\r\n          </Fade>) : null }\r\n          <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                    Please fill the credentials properly  :(\r\n                </Typography>\r\n          </Fade>\r\n\r\n        { showQr ? \r\n               <Button\r\n               onClick={QrCodeHandler}\r\n               variant=\"contained\"\r\n               color=\"primary\"\r\n               size=\"large\"\r\n             >\r\n                Show QR Code \r\n             </Button>  : \r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <TextField \r\n                id=\"Contacts\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={contactValue}\r\n                onChange={e => setContactValue(e.target.value)}\r\n                // disabled = {response.length > 1}\r\n                margin=\"normal\"\r\n                placeholder=\"Contacts\"\r\n                type=\"string\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"message\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={messageValue}\r\n                onChange={e => setMessageValue(e.target.value)}\r\n                // disabled = {response.length > 1}\r\n                margin=\"normal\"\r\n                placeholder=\"Message\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n            <div className={classes.formButtons}>\r\n                  <Button\r\n                    disabled={\r\n                      contactValue.length <= 9  || messageValue.length === 0 \r\n                    }\r\n                    onClick={() =>\r\n                      messageUserHandler(\r\n                        contactValue,\r\n                        messageValue\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                     Send \r\n                  </Button>\r\n                {showMessage.length > 15 ? \r\n                       <Typography color=\"secondary\" noWrap>\r\n                          {showMessage}\r\n                       </Typography>   :\r\n\r\n                        <Typography color=\"primary\" noWrap>\r\n                        {showMessage}\r\n                    </Typography> }\r\n\r\n              </div>\r\n          </form>  } \r\n          </Widget>\r\n        </Grid>\r\n      \r\n      {response.length >= 25 ? \r\n        (<Grid item xs={12} md={4}>\r\n          <Widget title=\"QR CODE GENERATOR\" disableWidgetMenu>\r\n            <div className={classes.dashedBorder}>\r\n              {isLoading ? <CircularProgress color=\"secondary\" /> : ( response.length >= 25 ? <QRCode value={response} size={256} />  : (<Typography color=\"secondary\"> {response.user} </Typography> )  ) } \r\n            </div> \r\n          </Widget>\r\n        </Grid>) : null }\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\message.js",["570"],"import React from \"react\";\r\nimport { Grid , Button} from \"@material-ui/core\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\n\r\nexport default function MessagePage(props) {\r\n  var classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Message\" />\r\n      \r\n        <Grid item xs={12} md={8}>\r\n          <Widget title=\"SEND MESSAGE\" disableWidgetMenu>\r\n               <Button\r\n                  onClick={() => props.history.push(\"/app/message/personalmessage\")}\r\n                  variant=\"contained\"\r\n                  color=\"inherit\"\r\n                  size=\"large\" >\r\n                    Send Personal Message \r\n                 </Button>  \r\n           \r\n                <Button\r\n                  onClick={() => props.history.push(\"/app/message/groupmessage\")}\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                  size=\"large\" >\r\n                    Send Group Message \r\n              </Button>   \r\n           \r\n                <Button\r\n                  onClick={() => props.history.push(\"/app/message/allcontacts\")}\r\n                  variant=\"contained\"\r\n                  color=\"inherit\"\r\n                  size=\"large\"  >\r\n                    Send Message To All \r\n              </Button>   \r\n          </Widget>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\uploadSheet.js",["571","572","573","574","575"],{"ruleId":"576","replacedBy":"577"},{"ruleId":"578","replacedBy":"579"},{"ruleId":"580","severity":1,"message":"581","line":1,"column":16,"nodeType":"582","messageId":"583","endLine":1,"endColumn":24},{"ruleId":"580","severity":1,"message":"584","line":24,"column":8,"nodeType":"582","messageId":"583","endLine":24,"endColumn":17},{"ruleId":"580","severity":1,"message":"585","line":45,"column":10,"nodeType":"582","messageId":"583","endLine":45,"endColumn":20},{"ruleId":"580","severity":1,"message":"586","line":45,"column":22,"nodeType":"582","messageId":"583","endLine":45,"endColumn":35},{"ruleId":"580","severity":1,"message":"587","line":2,"column":8,"nodeType":"582","messageId":"583","endLine":2,"endColumn":17},{"ruleId":"580","severity":1,"message":"588","line":15,"column":3,"nodeType":"582","messageId":"583","endLine":15,"endColumn":12},{"ruleId":"580","severity":1,"message":"589","line":9,"column":21,"nodeType":"582","messageId":"583","endLine":9,"endColumn":32},{"ruleId":"580","severity":1,"message":"590","line":10,"column":19,"nodeType":"582","messageId":"583","endLine":10,"endColumn":30},{"ruleId":"580","severity":1,"message":"591","line":11,"column":18,"nodeType":"582","messageId":"583","endLine":11,"endColumn":25},{"ruleId":"580","severity":1,"message":"592","line":26,"column":8,"nodeType":"582","messageId":"583","endLine":26,"endColumn":11},{"ruleId":"593","severity":1,"message":"594","line":35,"column":19,"nodeType":"595","messageId":"596","endLine":84,"endColumn":2},{"ruleId":"580","severity":1,"message":"597","line":10,"column":3,"nodeType":"582","messageId":"583","endLine":10,"endColumn":7},{"ruleId":"580","severity":1,"message":"598","line":27,"column":29,"nodeType":"582","messageId":"583","endLine":27,"endColumn":35},{"ruleId":"599","severity":1,"message":"600","line":29,"column":13,"nodeType":"601","endLine":44,"endColumn":4},{"ruleId":"599","severity":1,"message":"602","line":44,"column":6,"nodeType":"595","endLine":44,"endColumn":8,"suggestions":"603"},{"ruleId":"599","severity":1,"message":"604","line":60,"column":10,"nodeType":"595","endLine":60,"endColumn":12,"suggestions":"605"},{"ruleId":"576","replacedBy":"606"},{"ruleId":"578","replacedBy":"607"},{"ruleId":"580","severity":1,"message":"581","line":1,"column":16,"nodeType":"582","messageId":"583","endLine":1,"endColumn":24},{"ruleId":"580","severity":1,"message":"608","line":9,"column":14,"nodeType":"582","messageId":"583","endLine":9,"endColumn":24},{"ruleId":"580","severity":1,"message":"597","line":9,"column":26,"nodeType":"582","messageId":"583","endLine":9,"endColumn":30},{"ruleId":"580","severity":1,"message":"609","line":10,"column":8,"nodeType":"582","messageId":"583","endLine":10,"endColumn":12},{"ruleId":"580","severity":1,"message":"610","line":15,"column":18,"nodeType":"582","messageId":"583","endLine":15,"endColumn":30},{"ruleId":"580","severity":1,"message":"611","line":16,"column":17,"nodeType":"582","messageId":"583","endLine":16,"endColumn":28},{"ruleId":"580","severity":1,"message":"612","line":17,"column":16,"nodeType":"582","messageId":"583","endLine":17,"endColumn":26},{"ruleId":"580","severity":1,"message":"613","line":13,"column":8,"nodeType":"582","messageId":"583","endLine":13,"endColumn":18},{"ruleId":"580","severity":1,"message":"614","line":23,"column":38,"nodeType":"582","messageId":"583","endLine":23,"endColumn":48},{"ruleId":"580","severity":1,"message":"615","line":23,"column":50,"nodeType":"582","messageId":"583","endLine":23,"endColumn":63},{"ruleId":"580","severity":1,"message":"616","line":10,"column":8,"nodeType":"582","messageId":"583","endLine":10,"endColumn":14},{"ruleId":"580","severity":1,"message":"617","line":11,"column":8,"nodeType":"582","messageId":"583","endLine":11,"endColumn":13},{"ruleId":"580","severity":1,"message":"618","line":14,"column":8,"nodeType":"582","messageId":"583","endLine":14,"endColumn":12},{"ruleId":"580","severity":1,"message":"619","line":15,"column":10,"nodeType":"582","messageId":"583","endLine":15,"endColumn":19},{"ruleId":"580","severity":1,"message":"620","line":46,"column":8,"nodeType":"582","messageId":"583","endLine":46,"endColumn":20},{"ruleId":"621","severity":1,"message":"622","line":55,"column":67,"nodeType":"623","messageId":"624","endLine":55,"endColumn":68},{"ruleId":"599","severity":1,"message":"604","line":60,"column":10,"nodeType":"595","endLine":60,"endColumn":12,"suggestions":"625"},{"ruleId":"580","severity":1,"message":"626","line":64,"column":9,"nodeType":"582","messageId":"583","endLine":64,"endColumn":16},{"ruleId":"580","severity":1,"message":"581","line":1,"column":16,"nodeType":"582","messageId":"583","endLine":1,"endColumn":24},{"ruleId":"580","severity":1,"message":"627","line":1,"column":26,"nodeType":"582","messageId":"583","endLine":1,"endColumn":35},{"ruleId":"580","severity":1,"message":"628","line":2,"column":16,"nodeType":"582","messageId":"583","endLine":2,"endColumn":25},{"ruleId":"580","severity":1,"message":"629","line":3,"column":3,"nodeType":"582","messageId":"583","endLine":3,"endColumn":19},{"ruleId":"580","severity":1,"message":"630","line":4,"column":3,"nodeType":"582","messageId":"583","endLine":4,"endColumn":7},{"ruleId":"580","severity":1,"message":"631","line":5,"column":8,"nodeType":"582","messageId":"583","endLine":5,"endColumn":14},{"ruleId":"580","severity":1,"message":"632","line":7,"column":10,"nodeType":"582","messageId":"583","endLine":7,"endColumn":21},{"ruleId":"580","severity":1,"message":"633","line":7,"column":23,"nodeType":"582","messageId":"583","endLine":7,"endColumn":38},{"ruleId":"580","severity":1,"message":"634","line":15,"column":10,"nodeType":"582","messageId":"583","endLine":15,"endColumn":20},{"ruleId":"580","severity":1,"message":"626","line":18,"column":7,"nodeType":"582","messageId":"583","endLine":18,"endColumn":14},{"ruleId":"580","severity":1,"message":"587","line":2,"column":8,"nodeType":"582","messageId":"583","endLine":2,"endColumn":17},{"ruleId":"580","severity":1,"message":"588","line":15,"column":3,"nodeType":"582","messageId":"583","endLine":15,"endColumn":12},{"ruleId":"580","severity":1,"message":"589","line":9,"column":21,"nodeType":"582","messageId":"583","endLine":9,"endColumn":32},{"ruleId":"580","severity":1,"message":"590","line":10,"column":19,"nodeType":"582","messageId":"583","endLine":10,"endColumn":30},{"ruleId":"580","severity":1,"message":"591","line":11,"column":18,"nodeType":"582","messageId":"583","endLine":11,"endColumn":25},{"ruleId":"580","severity":1,"message":"592","line":26,"column":8,"nodeType":"582","messageId":"583","endLine":26,"endColumn":11},{"ruleId":"593","severity":1,"message":"594","line":35,"column":19,"nodeType":"595","messageId":"596","endLine":84,"endColumn":2},{"ruleId":"580","severity":1,"message":"597","line":10,"column":3,"nodeType":"582","messageId":"583","endLine":10,"endColumn":7},{"ruleId":"580","severity":1,"message":"598","line":27,"column":29,"nodeType":"582","messageId":"583","endLine":27,"endColumn":35},{"ruleId":"580","severity":1,"message":"629","line":2,"column":24,"nodeType":"582","messageId":"583","endLine":2,"endColumn":40},{"ruleId":"580","severity":1,"message":"630","line":3,"column":3,"nodeType":"582","messageId":"583","endLine":3,"endColumn":7},{"ruleId":"580","severity":1,"message":"634","line":3,"column":8,"nodeType":"582","messageId":"583","endLine":3,"endColumn":18},{"ruleId":"580","severity":1,"message":"608","line":7,"column":8,"nodeType":"582","messageId":"583","endLine":7,"endColumn":18},{"ruleId":"580","severity":1,"message":"635","line":8,"column":8,"nodeType":"582","messageId":"583","endLine":8,"endColumn":19},{"ruleId":"580","severity":1,"message":"626","line":28,"column":7,"nodeType":"582","messageId":"583","endLine":28,"endColumn":14},{"ruleId":"599","severity":1,"message":"604","line":45,"column":10,"nodeType":"595","endLine":45,"endColumn":12,"suggestions":"636"},{"ruleId":"576","replacedBy":"637"},{"ruleId":"578","replacedBy":"638"},{"ruleId":"580","severity":1,"message":"639","line":5,"column":11,"nodeType":"582","messageId":"583","endLine":5,"endColumn":19},{"ruleId":"580","severity":1,"message":"640","line":19,"column":16,"nodeType":"582","messageId":"583","endLine":19,"endColumn":21},{"ruleId":"580","severity":1,"message":"641","line":22,"column":9,"nodeType":"582","messageId":"583","endLine":22,"endColumn":18},{"ruleId":"580","severity":1,"message":"642","line":22,"column":20,"nodeType":"582","messageId":"583","endLine":22,"endColumn":32},{"ruleId":"580","severity":1,"message":"643","line":23,"column":9,"nodeType":"582","messageId":"583","endLine":23,"endColumn":14},{"ruleId":"580","severity":1,"message":"644","line":23,"column":16,"nodeType":"582","messageId":"583","endLine":23,"endColumn":24},{"ruleId":"580","severity":1,"message":"640","line":19,"column":16,"nodeType":"582","messageId":"583","endLine":19,"endColumn":21},{"ruleId":"580","severity":1,"message":"641","line":22,"column":9,"nodeType":"582","messageId":"583","endLine":22,"endColumn":18},{"ruleId":"580","severity":1,"message":"642","line":22,"column":20,"nodeType":"582","messageId":"583","endLine":22,"endColumn":32},{"ruleId":"580","severity":1,"message":"643","line":23,"column":9,"nodeType":"582","messageId":"583","endLine":23,"endColumn":14},{"ruleId":"580","severity":1,"message":"644","line":23,"column":16,"nodeType":"582","messageId":"583","endLine":23,"endColumn":24},{"ruleId":"580","severity":1,"message":"645","line":7,"column":3,"nodeType":"582","messageId":"583","endLine":7,"endColumn":7},{"ruleId":"580","severity":1,"message":"646","line":8,"column":3,"nodeType":"582","messageId":"583","endLine":8,"endColumn":6},{"ruleId":"580","severity":1,"message":"647","line":27,"column":7,"nodeType":"582","messageId":"583","endLine":27,"endColumn":19},{"ruleId":"599","severity":1,"message":"648","line":58,"column":6,"nodeType":"595","endLine":58,"endColumn":8,"suggestions":"649"},{"ruleId":"580","severity":1,"message":"627","line":1,"column":17,"nodeType":"582","messageId":"583","endLine":1,"endColumn":26},{"ruleId":"580","severity":1,"message":"650","line":9,"column":3,"nodeType":"582","messageId":"583","endLine":9,"endColumn":13},{"ruleId":"580","severity":1,"message":"651","line":10,"column":3,"nodeType":"582","messageId":"583","endLine":10,"endColumn":9},{"ruleId":"580","severity":1,"message":"652","line":11,"column":3,"nodeType":"582","messageId":"583","endLine":11,"endColumn":11},{"ruleId":"580","severity":1,"message":"647","line":25,"column":7,"nodeType":"582","messageId":"583","endLine":25,"endColumn":19},{"ruleId":"580","severity":1,"message":"644","line":23,"column":17,"nodeType":"582","messageId":"583","endLine":23,"endColumn":25},{"ruleId":"599","severity":1,"message":"648","line":66,"column":8,"nodeType":"595","endLine":66,"endColumn":10,"suggestions":"653"},{"ruleId":"580","severity":1,"message":"627","line":1,"column":26,"nodeType":"582","messageId":"583","endLine":1,"endColumn":35},{"ruleId":"580","severity":1,"message":"627","line":1,"column":26,"nodeType":"582","messageId":"583","endLine":1,"endColumn":35},{"ruleId":"580","severity":1,"message":"633","line":10,"column":24,"nodeType":"582","messageId":"583","endLine":10,"endColumn":39},{"ruleId":"599","severity":1,"message":"654","line":55,"column":6,"nodeType":"595","endLine":55,"endColumn":8,"suggestions":"655"},{"ruleId":"580","severity":1,"message":"627","line":1,"column":26,"nodeType":"582","messageId":"583","endLine":1,"endColumn":35},{"ruleId":"580","severity":1,"message":"626","line":12,"column":7,"nodeType":"582","messageId":"583","endLine":12,"endColumn":14},{"ruleId":"580","severity":1,"message":"656","line":3,"column":10,"nodeType":"582","messageId":"583","endLine":3,"endColumn":14},{"ruleId":"580","severity":1,"message":"628","line":4,"column":23,"nodeType":"582","messageId":"583","endLine":4,"endColumn":32},{"ruleId":"580","severity":1,"message":"643","line":21,"column":12,"nodeType":"582","messageId":"583","endLine":21,"endColumn":17},{"ruleId":"580","severity":1,"message":"644","line":21,"column":19,"nodeType":"582","messageId":"583","endLine":21,"endColumn":27},{"ruleId":"657","severity":1,"message":"658","line":147,"column":37,"nodeType":"659","messageId":"660","endLine":147,"endColumn":39},"no-native-reassign",["661"],"no-negated-in-lhs",["662"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Dashboard' is defined but never used.","'visitUsers' is assigned a value but never used.","'setVisitUsers' is assigned a value but never used.","'LoginUser' is defined but never used.","'AreaChart' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","'Link' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["663"],"React Hook useEffect has a missing dependency: 'usersData'. Either include it or remove the dependency array.",["664"],["661"],["662"],"'IconButton' is defined but never used.","'Icon' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'GithubIcon' is defined but never used.","'classnames' is defined but never used.","'SignupUser' is defined but never used.","'SignupCompany' is defined but never used.","'Widget' is defined but never used.","'Table' is defined but never used.","'mock' is defined but never used.","'propTypes' is defined but never used.","'companyDataa' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["665"],"'classes' is assigned a value but never used.","'useEffect' is defined but never used.","'TextField' is defined but never used.","'CircularProgress' is defined but never used.","'Fade' is defined but never used.","'QRCode' is defined but never used.","'messageUser' is defined but never used.","'isAuthenticated' is defined but never used.","'Typography' is defined but never used.","'PhotoCamera' is defined but never used.",["666"],["661"],["662"],"'EditIcon' is defined but never used.","'token' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'userDispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'companies'. Either include it or remove the dependency array.",["667"],"'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.",["668"],"React Hook useEffect has a missing dependency: 'allGroups'. Either include it or remove the dependency array.",["669"],"'Grid' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"670","fix":"671"},{"desc":"672","fix":"673"},{"desc":"672","fix":"674"},{"desc":"672","fix":"675"},{"desc":"676","fix":"677"},{"desc":"676","fix":"678"},{"desc":"679","fix":"680"},"Update the dependencies array to be: [token]",{"range":"681","text":"682"},"Update the dependencies array to be: [usersData]",{"range":"683","text":"684"},{"range":"685","text":"684"},{"range":"686","text":"684"},"Update the dependencies array to be: [companies]",{"range":"687","text":"688"},{"range":"689","text":"688"},"Update the dependencies array to be: [allGroups]",{"range":"690","text":"691"},[1441,1443],"[token]",[2733,2735],"[usersData]",[2874,2876],[1156,1158],[1501,1503],"[companies]",[2054,2056],[1805,1807],"[allGroups]"]