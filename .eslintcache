[{"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\index.js":"1","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\serviceWorker.js":"2","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\App.js":"3","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\context\\UserContext.js":"4","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\context\\LayoutContext.js":"5","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\themes\\index.js":"6","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Layout\\Layout.js":"7","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\error\\Error.js":"8","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\login\\Login.js":"9","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\themes\\default.js":"10","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\login\\styles.js":"11","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\error\\styles.js":"12","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Layout\\styles.js":"13","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\charts\\Charts.js":"14","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\icons\\Icons.js":"15","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\Dashboard.js":"16","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\maps\\Maps.js":"17","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\Sidebar.js":"18","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Header\\Header.js":"19","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\mock.js":"20","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\icons\\styles.js":"21","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\styles.js":"22","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\maps\\styles.js":"23","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\charts\\components\\ApexHeatmap.js":"24","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\charts\\components\\ApexLineChart.js":"25","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Header\\styles.js":"26","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\components\\Dot.js":"27","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Widget\\Widget.js":"28","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\PageTitle\\PageTitle.js":"29","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\components\\Table\\Table.js":"30","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"31","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Wrappers\\Wrappers.js":"32","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Notification\\Notification.js":"33","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\UserAvatar\\UserAvatar.js":"34","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"35","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\styles.js":"36","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\PageTitle\\styles.js":"37","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Widget\\styles.js":"38","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"39","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Notification\\styles.js":"40","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\UserAvatar\\styles.js":"41","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"42","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\message\\styles.js":"43","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\message\\Message.js":"44","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\users\\Users.js":"45","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\index.js":"46","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\serviceWorker.js":"47","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\context\\UserContext.js":"48","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\context\\LayoutContext.js":"49","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\App.js":"50","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\themes\\index.js":"51","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Layout\\Layout.js":"52","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\login\\Login.js":"53","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\error\\Error.js":"54","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\themes\\default.js":"55","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\error\\styles.js":"56","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\login\\styles.js":"57","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Layout\\styles.js":"58","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\Users.js":"59","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\Message.js":"60","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\charts\\Charts.js":"61","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\icons\\Icons.js":"62","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\Dashboard.js":"63","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\maps\\Maps.js":"64","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\Sidebar.js":"65","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Header\\Header.js":"66","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\mock.js":"67","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\styles.js":"68","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\components\\Table\\Table.js":"69","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Widget\\Widget.js":"70","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\PageTitle\\PageTitle.js":"71","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Wrappers\\Wrappers.js":"72","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\icons\\styles.js":"73","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\charts\\components\\ApexLineChart.js":"74","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\charts\\components\\ApexHeatmap.js":"75","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\styles.js":"76","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\maps\\styles.js":"77","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\components\\Dot.js":"78","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"79","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"80","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Header\\styles.js":"81","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\styles.js":"82","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\UserAvatar\\UserAvatar.js":"83","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Notification\\Notification.js":"84","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Widget\\styles.js":"85","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\PageTitle\\styles.js":"86","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"87","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"88","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Notification\\styles.js":"89","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\UserAvatar\\styles.js":"90","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\contacts.js":"91","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\components\\contactsTable\\contactsTable.js":"92","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\contacts\\contacts.js":"93","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\components\\contactsTable\\contactsTable.js":"94","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\profile\\profile.js":"95","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\profile\\profile.js":"96","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\profile\\styles.js":"97","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\profile\\styles.js":"98","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\UserRegister.js":"99","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\CompanyRegister.js":"100","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\styles.js":"101","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\addContact.js":"102","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\styles.js":"103","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\createGroups.js":"104","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\PersonalMessage.js":"105","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\allContactMessage.js":"106","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\groupMessage.js":"107","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\personalMessage.js":"108","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\message.js":"109","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\uploadSheet.js":"110","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\columnMapping.js":"111","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\config.js":"112","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\EditUser.js":"113"},{"size":896,"mtime":1619688090078,"results":"114","hashOfConfig":"115"},{"size":5083,"mtime":1619688090094,"results":"116","hashOfConfig":"115"},{"size":1787,"mtime":1619688090078,"results":"117","hashOfConfig":"115"},{"size":4757,"mtime":1622524566669,"results":"118","hashOfConfig":"115"},{"size":1444,"mtime":1619688090078,"results":"119","hashOfConfig":"115"},{"size":534,"mtime":1619688090094,"results":"120","hashOfConfig":"115"},{"size":5111,"mtime":1620384813371,"results":"121","hashOfConfig":"115"},{"size":1626,"mtime":1619688090094,"results":"122","hashOfConfig":"115"},{"size":15093,"mtime":1621833836278,"results":"123","hashOfConfig":"115"},{"size":3127,"mtime":1619688090094,"results":"124","hashOfConfig":"115"},{"size":3281,"mtime":1619688090094,"results":"125","hashOfConfig":"115"},{"size":1395,"mtime":1619688090094,"results":"126","hashOfConfig":"115"},{"size":710,"mtime":1619688090078,"results":"127","hashOfConfig":"115"},{"size":5790,"mtime":1619688090078,"results":"128","hashOfConfig":"115"},{"size":391433,"mtime":1619688090094,"results":"129","hashOfConfig":"115"},{"size":12968,"mtime":1621833874921,"results":"130","hashOfConfig":"115"},{"size":1010,"mtime":1619690690686,"results":"131","hashOfConfig":"115"},{"size":4378,"mtime":1620204375218,"results":"132","hashOfConfig":"115"},{"size":10224,"mtime":1619692793386,"results":"133","hashOfConfig":"115"},{"size":4628,"mtime":1620373443555,"results":"134","hashOfConfig":"115"},{"size":812,"mtime":1619688090094,"results":"135","hashOfConfig":"115"},{"size":3000,"mtime":1619688090094,"results":"136","hashOfConfig":"115"},{"size":178,"mtime":1619688090094,"results":"137","hashOfConfig":"115"},{"size":1909,"mtime":1619688090078,"results":"138","hashOfConfig":"115"},{"size":1396,"mtime":1619688090078,"results":"139","hashOfConfig":"115"},{"size":4043,"mtime":1619688090078,"results":"140","hashOfConfig":"115"},{"size":902,"mtime":1619688090078,"results":"141","hashOfConfig":"115"},{"size":2581,"mtime":1619688090078,"results":"142","hashOfConfig":"115"},{"size":447,"mtime":1619688090078,"results":"143","hashOfConfig":"115"},{"size":1119,"mtime":1621921051447,"results":"144","hashOfConfig":"115"},{"size":4160,"mtime":1619688090078,"results":"145","hashOfConfig":"115"},{"size":3971,"mtime":1619688090078,"results":"146","hashOfConfig":"115"},{"size":3413,"mtime":1619688090078,"results":"147","hashOfConfig":"115"},{"size":620,"mtime":1619688090078,"results":"148","hashOfConfig":"115"},{"size":4589,"mtime":1619688090078,"results":"149","hashOfConfig":"115"},{"size":1363,"mtime":1619688090078,"results":"150","hashOfConfig":"115"},{"size":482,"mtime":1619688090078,"results":"151","hashOfConfig":"115"},{"size":1015,"mtime":1619688090078,"results":"152","hashOfConfig":"115"},{"size":1075,"mtime":1619688090078,"results":"153","hashOfConfig":"115"},{"size":1040,"mtime":1619688090078,"results":"154","hashOfConfig":"115"},{"size":291,"mtime":1619688090078,"results":"155","hashOfConfig":"115"},{"size":1474,"mtime":1619688090078,"results":"156","hashOfConfig":"115"},{"size":428,"mtime":1621838399563,"results":"157","hashOfConfig":"115"},{"size":4788,"mtime":1622547409525,"results":"158","hashOfConfig":"115"},{"size":4030,"mtime":1621925577818,"results":"159","hashOfConfig":"115"},{"size":896,"mtime":1623914010294,"results":"160","hashOfConfig":"161"},{"size":5083,"mtime":1619688090094,"results":"162","hashOfConfig":"161"},{"size":7438,"mtime":1624949136860,"results":"163","hashOfConfig":"161"},{"size":1444,"mtime":1619688090078,"results":"164","hashOfConfig":"161"},{"size":1787,"mtime":1619688090078,"results":"165","hashOfConfig":"161"},{"size":534,"mtime":1619688090094,"results":"166","hashOfConfig":"161"},{"size":5018,"mtime":1624948459077,"results":"167","hashOfConfig":"161"},{"size":8714,"mtime":1624194838826,"results":"168","hashOfConfig":"161"},{"size":1626,"mtime":1619688090094,"results":"169","hashOfConfig":"161"},{"size":3127,"mtime":1619688090094,"results":"170","hashOfConfig":"161"},{"size":1395,"mtime":1619688090094,"results":"171","hashOfConfig":"161"},{"size":3281,"mtime":1622630661213,"results":"172","hashOfConfig":"161"},{"size":904,"mtime":1623410875368,"results":"173","hashOfConfig":"161"},{"size":4482,"mtime":1624963322331,"results":"174","hashOfConfig":"161"},{"size":1729,"mtime":1623064683870,"results":"175","hashOfConfig":"161"},{"size":5790,"mtime":1619688090078,"results":"176","hashOfConfig":"161"},{"size":391433,"mtime":1619688090094,"results":"177","hashOfConfig":"161"},{"size":13102,"mtime":1623314042746,"results":"178","hashOfConfig":"161"},{"size":1010,"mtime":1619690690686,"results":"179","hashOfConfig":"161"},{"size":4429,"mtime":1624000649216,"results":"180","hashOfConfig":"161"},{"size":10240,"mtime":1623410042054,"results":"181","hashOfConfig":"161"},{"size":4630,"mtime":1622714491727,"results":"182","hashOfConfig":"161"},{"size":1830,"mtime":1624963636476,"results":"183","hashOfConfig":"161"},{"size":1119,"mtime":1621921051447,"results":"184","hashOfConfig":"161"},{"size":2581,"mtime":1619688090078,"results":"185","hashOfConfig":"161"},{"size":447,"mtime":1619688090078,"results":"186","hashOfConfig":"161"},{"size":3971,"mtime":1619688090078,"results":"187","hashOfConfig":"161"},{"size":812,"mtime":1619688090094,"results":"188","hashOfConfig":"161"},{"size":1396,"mtime":1619688090078,"results":"189","hashOfConfig":"161"},{"size":1909,"mtime":1619688090078,"results":"190","hashOfConfig":"161"},{"size":1363,"mtime":1619688090078,"results":"191","hashOfConfig":"161"},{"size":178,"mtime":1619688090094,"results":"192","hashOfConfig":"161"},{"size":902,"mtime":1619688090078,"results":"193","hashOfConfig":"161"},{"size":4589,"mtime":1619688090078,"results":"194","hashOfConfig":"161"},{"size":4160,"mtime":1619688090078,"results":"195","hashOfConfig":"161"},{"size":4043,"mtime":1619688090078,"results":"196","hashOfConfig":"161"},{"size":3000,"mtime":1619688090094,"results":"197","hashOfConfig":"161"},{"size":620,"mtime":1619688090078,"results":"198","hashOfConfig":"161"},{"size":3413,"mtime":1619688090078,"results":"199","hashOfConfig":"161"},{"size":1015,"mtime":1619688090078,"results":"200","hashOfConfig":"161"},{"size":482,"mtime":1619688090078,"results":"201","hashOfConfig":"161"},{"size":1474,"mtime":1619688090078,"results":"202","hashOfConfig":"161"},{"size":1075,"mtime":1619688090078,"results":"203","hashOfConfig":"161"},{"size":1040,"mtime":1619688090078,"results":"204","hashOfConfig":"161"},{"size":291,"mtime":1619688090078,"results":"205","hashOfConfig":"161"},{"size":3215,"mtime":1624121187721,"results":"206","hashOfConfig":"161"},{"size":1247,"mtime":1620373548366,"results":"207","hashOfConfig":"161"},{"size":944,"mtime":1620373158535,"results":"208","hashOfConfig":"115"},{"size":1247,"mtime":1620373548366,"results":"209","hashOfConfig":"115"},{"size":1649,"mtime":1621929357391,"results":"210","hashOfConfig":"115"},{"size":1748,"mtime":1624110872426,"results":"211","hashOfConfig":"161"},{"size":539,"mtime":1622785140828,"results":"212","hashOfConfig":"161"},{"size":509,"mtime":1621929351579,"results":"213","hashOfConfig":"115"},{"size":7483,"mtime":1624194679895,"results":"214","hashOfConfig":"161"},{"size":7632,"mtime":1624121330097,"results":"215","hashOfConfig":"161"},{"size":2923,"mtime":1624947980978,"results":"216","hashOfConfig":"161"},{"size":8818,"mtime":1624948674975,"results":"217","hashOfConfig":"161"},{"size":3525,"mtime":1624948709985,"results":"218","hashOfConfig":"161"},{"size":8080,"mtime":1624948599928,"results":"219","hashOfConfig":"161"},{"size":6742,"mtime":1623064668045,"results":"220","hashOfConfig":"161"},{"size":6659,"mtime":1624963146410,"results":"221","hashOfConfig":"161"},{"size":8441,"mtime":1624963135865,"results":"222","hashOfConfig":"161"},{"size":8322,"mtime":1624963180787,"results":"223","hashOfConfig":"161"},{"size":3556,"mtime":1624950907864,"results":"224","hashOfConfig":"161"},{"size":5675,"mtime":1624121221127,"results":"225","hashOfConfig":"161"},{"size":7352,"mtime":1624121173831,"results":"226","hashOfConfig":"161"},{"size":65,"mtime":1624121135728,"results":"227","hashOfConfig":"161"},{"size":5728,"mtime":1624950336151,"results":"228","hashOfConfig":"161"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},"ia8nsq",{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"231"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"231"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},"1jcohhr",{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"324"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"324"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"324"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"354","messages":"355","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"324"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"324"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"324"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"324"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"231"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"324"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"324"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"324"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"324"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"324"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"459","messages":"460","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"461","messages":"462","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"463","messages":"464","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"465","messages":"466","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"324"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"470","usedDeprecatedRules":"324"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"324"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"324"},"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\index.js",[],["479","480"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\serviceWorker.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\App.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\context\\UserContext.js",["481"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\context\\LayoutContext.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\themes\\index.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Layout\\Layout.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\error\\Error.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\login\\Login.js",["482","483","484"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\themes\\default.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\login\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\error\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Layout\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\charts\\Charts.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\icons\\Icons.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\Dashboard.js",["485","486"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\maps\\Maps.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\Sidebar.js",["487","488","489","490","491"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Textsms as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  InsertEmoticon as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  SettingsPower as LogoutIcon,\r\n  Contacts as ContactIcon,\r\n  Person as PersonIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  {\r\n    id: 1,\r\n    label: \"Messages\",\r\n    link: \"/app/message\",\r\n    icon: <TypographyIcon />,\r\n  },\r\n  { id: 2, label: \"Users\", link: \"/app/users\", icon: <TableIcon /> },\r\n  {\r\n    id: 3,\r\n    label: \"Contacts\",\r\n    link: \"/app/contacts\",\r\n    icon: <ContactIcon />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"Profile\",\r\n    link: \"/app/profile\",\r\n    icon: <PersonIcon />,\r\n  },\r\n  ,{\r\n    id: 5,\r\n    label: \"Logout\",\r\n    link: \"/app/logout\",\r\n    icon: <LogoutIcon />,\r\n  },\r\n  {\r\n    id: 6,\r\n    label: \"Notifications\",\r\n    link: \"/app/notifications\",\r\n    icon: <NotificationsIcon />,\r\n  },\r\n  {\r\n    id: 7,\r\n    label: \"UI Elements\",\r\n    link: \"/app/ui\",\r\n    icon: <UIElementsIcon />,\r\n    children: [\r\n      { label: \"Icons\", link: \"/app/ui/icons\" },\r\n      { label: \"Charts\", link: \"/app/ui/charts\" },\r\n      { label: \"Maps\", link: \"/app/ui/maps\" },\r\n    ],\r\n  },\r\n  // { id: 8, type: \"divider\" },\r\n  // { id: 9, type: \"title\", label: \"HELP\" },\r\n  // { id: 10, label: \"Library\", link: \"https://flatlogic.com/templates\", icon: <LibraryIcon /> },\r\n  // { id: 11, label: \"Support\", link: \"https://flatlogic.com/forum\", icon: <SupportIcon /> },\r\n  // { id: 12, label: \"FAQ\", link: \"https://flatlogic.com/forum\", icon: <FAQIcon /> }\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Header\\Header.js",["492","493"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n           Admin\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              John Smith\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n              Flalogic.com\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\mock.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\icons\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\maps\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\charts\\components\\ApexLineChart.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Header\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Widget\\Widget.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Notification\\Notification.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\PageTitle\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Widget\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Notification\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\UserAvatar\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\message\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\message\\Message.js",["494","495"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\users\\Users.js",["496"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\index.js",[],["497","498"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\serviceWorker.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\context\\UserContext.js",["499","500"],"import React, {useState} from \"react\";\r\nimport API from \"../config\";\r\n\r\nvar UserStateContext = React.createContext();\r\nvar UserDispatchContext = React.createContext();\r\n\r\nfunction userReducer(state, action) {\r\n  console.log(\"action : \" +action.type);\r\n  switch (action.type) {\r\n    case \"REGISTER_FAILURE\":\r\n      return { ...state, error: true, isAuthenticated: false};\r\n    case \"SIGN_OUT_SUCCESS\":\r\n      return { ...state,  error: false, isAuthenticated: false };\r\n    case \"LOGIN_SUCCESS\":\r\n      return { ...state, error: false,  isAuthenticated: true };\r\n    case \"LOGIN_FAILURE\":\r\n      return { ...state, error: true ,  isAuthenticated: false };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction UserProvider({ children }) {\r\n  const err = \"please fill the correct details only !!!\";\r\n  \r\n  var [state, dispatch] = React.useReducer(userReducer, {\r\n      error: !! `${err}`,\r\n      isAuthenticated: !!localStorage.getItem(\"TOKEN\")\r\n    });\r\n\r\n  return (\r\n    <UserStateContext.Provider value={state}>\r\n      <UserDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useUserState() {\r\n  var context = React.useContext(UserStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserState must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useUserDispatch() {\r\n  var context = React.useContext(UserDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\n// ###########################################################\r\n\r\nasync function SignupCompany(name, address1 ,address2, state, city, pincode, gstin, userID) {\r\n  try {\r\n      const response = await fetch(`${API}/company/signup`,{\r\n              method: \"POST\",\r\n              headers: {\r\n                        Accept:  \"application/json\",\r\n                      \"Content-Type\": \"application/json\"\r\n              },\r\n              body: JSON.stringify({name,address1,address2,state,city,pincode,gstin,createdBy:userID})\r\n            }).then(response => response.json());\r\n\r\n            return response;\r\n\r\n  }catch(error){\r\n          console.log(error.message)\r\n          return {error : error.message};\r\n  }\r\n}\r\n\r\nasync function SignupUser(name, email, password, role, company, userID) {\r\n    try{\r\n      const response = await fetch(`${API}/user/signup`,{\r\n              method: \"POST\",\r\n              headers: {\r\n                        Accept:  \"application/json\",\r\n                      \"Content-Type\": \"application/json\"\r\n              },\r\n              body: JSON.stringify({name, email, password, role, company, userID})\r\n            }).then(response => response.json());\r\n            return response;\r\n        } catch(error) {\r\n          console.log(error.message);\r\n          return {error : error.message};\r\n        }\r\n      }\r\n\r\nasync function LoginUser(dispatch, email, password, history, setIsLoading, setError) {\r\n  try{\r\n    // console.log(\"REACT_APP_API_URL + \" +process.env.REACT_APP_API_URL);\r\n    // // console.log(\"REACT_APP_API_URI  + \" +process.env.REACT_APP_API_URL );\r\n    // console.log(\"API + \" +APII);\r\n      const data = await fetch(`${API}/user/login`,{\r\n                      method: \"POST\",\r\n                      headers: {\r\n                                Accept:  \"application/json\",\r\n                              \"Content-Type\": \"application/json\"\r\n                      },\r\n                      body: JSON.stringify({email, password})\r\n                    }).then(response => response.json()) ;\r\n\r\n            if(data.error){\r\n              console.log(\":errorr\");\r\n              throw new Error();\r\n            }else {\r\n               localStorage.setItem('TOKEN', JSON.stringify(data));\r\n              dispatch({ type: 'LOGIN_SUCCESS' })\r\n              return data;\r\n      }     \r\n  }catch(error) {\r\n    console.log(\"catch\");\r\n    dispatch({ type: \"LOGIN_FAILURE\" });\r\n    return ({error: true }) ;\r\n  }\r\n}\r\n\r\nconst signOut = async(dispatch, history, token, userID) => {\r\n\r\n  const response = await fetch(`${API}/user/logout/${userID}`,{\r\n                    method: \"POST\",\r\n                    headers: {\r\n                            \"Authorization\": `Bearer ${token}`,\r\n                            \"Content-Type\": \"application/json\"\r\n                    },\r\n                  }).then(response => response.json()) ;\r\n\r\n  localStorage.removeItem(\"TOKEN\");\r\n\r\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\r\n  window.location.reload();\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n  if(typeof window == 'undefined') {\r\n      return false\r\n    }\r\n   if(localStorage.getItem(\"TOKEN\")) {\r\n       return JSON.parse(localStorage.getItem('TOKEN'))\r\n       } else{\r\n           return false\r\n       }\r\n} \r\n\r\nexport const GroupRegistration = async(contacts, name, user, token) => {\r\n  try{\r\n    const response = await fetch(`${API}/group/signup`,{\r\n          method: \"POST\",\r\n          headers: {\r\n                  \"Authorization\" : `${token}`,\r\n                  \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({user, name, contacts})\r\n        }).then(response => response.json());\r\n\r\n        return response;\r\n  }catch(error) {\r\n    console.log(error.message);\r\n    return {error : error.message}\r\n  }\r\n}\r\n\r\nexport const messageGroup = async(group, message, token, companyID, userID) => {\r\n  try{\r\n    const response = await fetch(`${API}/group/message`,{\r\n          method: \"POST\",\r\n          headers: {\r\n                  \"Authorization\" : `Bearer ${token}`,\r\n                  \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({group, message, companyID, userID})\r\n        }).then(res => res.json());\r\n\r\n        console.log(\"response : \" +response.message);\r\n        return response.message;\r\n  }catch(error) {\r\n    console.log(error.message);\r\n    return {error : error.message}\r\n  }\r\n}\r\n\r\nexport const messageAllUsers = async(message, company_id, token, companyID, userID) => {\r\n  try{\r\n    const response = await fetch(`${API}/contact/message`,{\r\n          method: \"POST\",\r\n          headers: {\r\n                  \"Authorization\" : `Bearer ${token}`,\r\n                  \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({company_id, message, companyID, userID})\r\n        }).then(res => res.json());\r\n\r\n        console.log(\"response : \" +response.message);\r\n        return response.message;\r\n  }catch(error) {\r\n    console.log(error.message);\r\n    return {error : error.message}\r\n  }\r\n}\r\n\r\nasync function messageUser(countrycode, contact, message, token, companyID, userID) {\r\n  try{\r\n    const response = await fetch(`${API}/user/message`, {\r\n            method: \"POST\",\r\n            headers: {\r\n            \"Authorization\" : `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\"\r\n              },\r\n            body: JSON.stringify({countrycode, contact, message: message, companyID, userID})\r\n          }).then(res => res.json()) ;\r\n\r\n          console.log(\"response at messageUser : \" +response.message);\r\n\r\n          return response.message;\r\n    }catch(error){\r\n        console.log(error);\r\n  } \r\n}\r\n\r\n\r\n\r\n\r\nexport { UserProvider, useUserState, useUserDispatch,SignupUser,SignupCompany, LoginUser, signOut, messageUser };\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\context\\LayoutContext.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\App.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\themes\\index.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Layout\\Layout.js",["501","502","503"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport { signOut, useUserDispatch } from \"../../context/UserContext\";\r\n\r\nimport { Typography } from \"../Wrappers\";\r\n\r\n// //icons\r\n// import {\r\n//   mdiFacebook as FacebookIcon,\r\n//   mdiTwitter as TwitterIcon,\r\n//   mdiGithub as GithubIcon,\r\n// } from '@mdi/js'\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Message from \"../../pages/message/message\";\r\n// import Notifications from \"../../pages/notifications\";\r\nimport Contacts from \"../../pages/contacts/contacts\"\r\n// import Maps from \"../../pages/maps\";\r\nimport Users from \"../../pages/users/Users\";\r\n// import Icons from \"../../pages/icons\";\r\n// import Charts from \"../../pages/charts\";\r\nimport Profile from \"../../pages/profile/profile\"\r\nimport UserRegister from \"../../pages/users/UserRegister\"\r\nimport CompanyRegister from \"../../pages/users/CompanyRegister\"\r\nimport AddContacts from \"../../pages/contacts/addContact\"\r\nimport CreateGroups from \"../../pages/contacts/createGroups\"\r\nimport PersonalMessage from \"../../pages/message/personalMessage\"\r\nimport AllContacts from \"../../pages/message/allContactMessage\"\r\nimport GroupMessage from \"../../pages/message/groupMessage\"\r\nimport UploadExcelSheet from \"../../pages/contacts/uploadSheet\"\r\nimport ColumnMapping from \"../../pages/contacts/columnMapping\"\r\nimport EditUser from \"../../pages/users/EditUser\"\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var userDispatch = useUserDispatch();\r\n\r\nconst isAuth =  JSON.parse(localStorage.getItem('TOKEN'));\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n\r\n              <Route path=\"/app/users\" exact component={Users} />\r\n              <Route path=\"/app/user/register\" exact component={UserRegister} />\r\n              <Route path=\"/app/user/edit-user\" exact component={EditUser} />\r\n\r\n              <Route path=\"/app/dashboard\" component={Dashboard} />\r\n\r\n              <Route path=\"/app/message\" exact component={Message} />\r\n              <Route path=\"/app/message/personalmessage\" exact component={PersonalMessage} />\r\n              <Route path=\"/app/message/groupmessage\" exact component={GroupMessage} />\r\n              <Route path=\"/app/message/allcontacts\" exact component={AllContacts} />\r\n\r\n              <Route path=\"/app/contact/register\" exact component={AddContacts} />\r\n              <Route path=\"/app/contacts\" exact component={Contacts} />\r\n              <Route path=\"/app/contacts/addexcel\" exact component={UploadExcelSheet} />\r\n              <Route path=\"/app/contacts/addexcel/mapping\" exact component={ColumnMapping} />\r\n\r\n \r\n              {isAuth.user.role === \"admin\" ? <Route path=\"/app/company/register\" component={CompanyRegister} /> : null }\r\n              <Route path=\"/app/group/register\" component={CreateGroups} />\r\n              {/* <Route path=\"/app/notifications\" component={Notifications} /> */}\r\n              <Route path=\"/app/logout\" render={() => signOut(userDispatch, props.history, isAuth.token, isAuth.user._id) } />\r\n              <Route path=\"/app/user/delete\" render={() => <h1> User Deleted </h1>} />\r\n              <Route path=\"/app/profile\" component={Profile} />\r\n\r\n              {/* <Route\r\n                exact\r\n                path=\"/app/ui\"\r\n                render={() => <Redirect to=\"/app/ui/icons\" />}\r\n              />\r\n              <Route path=\"/app/ui/maps\" component={Maps} />\r\n              <Route path=\"/app/ui/icons\" component={Icons} />\r\n              <Route path=\"/app/ui/charts\" component={Charts} /> */}\r\n            </Switch>\r\n            <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n            </Box>\r\n\r\n             <br></br>\r\n             <div className={classes.footer}>\r\n              <Typography color=\"primary\" className={classes.copyright}>\r\n                © 2020-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://www.vistanova.com/\" rel=\"noopener noreferrer\" target=\"_blank\"> Vistanova </a>, LLC. All rights reserved.\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\login\\Login.js",["504","505","506"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\n\r\n// context\r\nimport { useUserDispatch, LoginUser, SignupUser, SignupCompany } from \"../../context/UserContext\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [activeTabId, setActiveTabId] = useState(0);\r\n  \r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n\r\n  const clickHandler = (userDispatch,emailValue,passwordValue) => {\r\n      LoginUser(userDispatch,emailValue,passwordValue).then((data) => {\r\n        console.log(\"here we are inside the ddataaa : \");\r\n        if(data.error){\r\n           setError(true);\r\n           console.log(\"Error : \" +data.error);\r\n           console.log(\"errrrrrrror : \" +error);\r\n           setIsLoading(false);\r\n        }else{\r\n           console.log(\"no eerrorr\")\r\n           setError(false);\r\n           setIsLoading(false);\r\n           props.history.push('/app/dashboard')\r\n        }\r\n      })\r\n   }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>  USERS  </Typography>\r\n      </div>\r\n\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\r\n          </Tabs>\r\n\r\n         {/* //////////////////////LOGIN///////////////////////   */}\r\n          {activeTabId === 0 && (\r\n            <React.Fragment>\r\n              {new Date().getHours() <= 12 ? \r\n              <Typography variant=\"h1\" className={classes.greeting}>\r\n                Good Morning User \r\n              </Typography>     : \r\n              (\r\n                new Date().getHours() > 12 && new Date().getHours() <= 17 ?\r\n                <Typography variant=\"h1\" className={classes.greeting}>\r\n                  Good Afternoon User \r\n                </Typography>       :\r\n                <Typography variant=\"h1\" className={classes.greeting}>\r\n                 Good Evening User \r\n            </Typography>\r\n              ) } \r\n\r\n            { error ? console.log(\"error is showing \")\r\n              //  ( <Fade in={error}>\r\n              //       <Typography color=\"secondary\" className={classes.errorMessage}>\r\n              //           Please fill the credentials properly  :(\r\n              //       </Typography>\r\n              //   </Fade> )\r\n                : \r\n                console.log(\"error is not showing \")  }\r\n\r\n<br/><br/><br/>\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={emailValue}\r\n                onChange={e => setEmailValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                autoComplete=\"false\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                autoComplete=\"false\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                    <Button\r\n                      disabled={\r\n                        emailValue.length === 0 || passwordValue.length === 0\r\n                      }\r\n                      onClick={() =>\r\n                        clickHandler(\r\n                          userDispatch,\r\n                          emailValue,\r\n                          passwordValue,\r\n                          props.history,\r\n                        )\r\n                      }\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"large\" >\r\n                      Login\r\n                    </Button>\r\n                )}\r\n                {/* <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.forgetButton}\r\n                  onClick = { () => setActiveTabId(2)}\r\n                >\r\n                  Forget Password\r\n                </Button> */}\r\n              </div>\r\n\r\n            </React.Fragment>\r\n          )}\r\n\r\n      {/* ////////////////////////// FORGET PASSWORD ///////////////////////////\r\n      {activeTabId === 3 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                Forgot your account ? \r\n              </Typography>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  User Does not Exist  :(\r\n                </Typography>\r\n              </Fade>\r\n              \r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={forgotEmailValue}\r\n                onChange={e => setForgotEmailValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={forgotEmailValue}\r\n                onChange={e => setForgotPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n            \r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      LoginUser(\r\n                        userDispatch,\r\n                        forgotEmailValue,\r\n                        forgotPasswordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    disabled={\r\n                      forgotEmailValue.length === 0 ||\r\n                      forgotPasswordValue.length === 0 \r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Password Reset\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              \r\n            </React.Fragment>\r\n          )} */}\r\n\r\n        </div> <br></br>\r\n        {/* <Typography color=\"primary\" className={classes.copyright}>\r\n        © 2020-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://www.vistaura.com/\" rel=\"noopener noreferrer\" target=\"_blank\"> Vistaura </a>, LLC. All rights reserved.\r\n        </Typography> */}\r\n      </div>\r\n    </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\error\\Error.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\themes\\default.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\error\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\login\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Layout\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\Users.js",["507","508","509","510","511"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\Message.js",["512","513","514","515","516","517","518","519","520","521"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\charts\\Charts.js",[],["522","523"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\icons\\Icons.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\Dashboard.js",["524","525"],"import React, { useState } from \"react\";\r\n// import LoginUser from \"../../context/UserContext\"\r\n// import {\r\n//   Grid,\r\n//   LinearProgress,\r\n//   Select,\r\n//   OutlinedInput,\r\n//   MenuItem,\r\n//   Button\r\n// } from \"@material-ui/core\";\r\n// import { useTheme } from \"@material-ui/styles\";\r\n// import {\r\n//   ResponsiveContainer,\r\n//   ComposedChart,\r\n//   AreaChart,\r\n//   LineChart,\r\n//   Line,\r\n//   Area,\r\n//   PieChart,\r\n//   Pie,\r\n//   Cell,\r\n//   YAxis,\r\n//   XAxis,\r\n// } from \"recharts\";\r\n\r\n// styles\r\n// import useStyles from \"./styles\";\r\n\r\n// // components\r\n// import mock from \"./mock\";\r\n// import Widget from \"../../components/Widget\";\r\n// import PageTitle from \"../../components/PageTitle\";\r\n// import { Typography } from \"../../components/Wrappers\";\r\n// import Dot from \"../../components/Sidebar/components/Dot\";\r\n// import Table from \"./components/Table/Table\";\r\n// import BigStat from \"./components/BigStat/BigStat\";\r\n\r\n// const mainChartData = getMainChartData();\r\n// const PieChartData = [\r\n//   { name: \"Group A\", value: 400, color: \"primary\" },\r\n//   { name: \"Group B\", value: 300, color: \"secondary\" },\r\n//   { name: \"Group C\", value: 300, color: \"warning\" },\r\n//   { name: \"Group D\", value: 200, color: \"success\" },\r\n// ];\r\n\r\nexport default function Dashboard(props) {\r\n  // var classes = useStyles();\r\n  // var theme = useTheme();\r\n\r\n  // local\r\n  // var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n\r\n  return (\r\n    <>\r\n      {/* <PageTitle title=\"Dashboard\" button={<Button\r\n      variant=\"contained\"\r\n      size=\"medium\"\r\n      color=\"secondary\"\r\n    >\r\n        Latest Reports\r\n    </Button>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Visits Today\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n\r\n              </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n              <LineChart\r\n                width={110}\r\n                height={70}\r\n                data={[\r\n                  { value: 10 },\r\n                  { value: 15 },\r\n                  { value: 12 },\r\n                  { value: 18 },\r\n                  { value: 17 },\r\n                ]}\r\n              >\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"value\"\r\n                  stroke={theme.palette.success.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                />\r\n              </LineChart>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Registrations\r\n                </Typography>\r\n                <Typography size=\"md\">860</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Sign Out\r\n                </Typography>\r\n                <Typography size=\"md\">32</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Rate\r\n                </Typography>\r\n                <Typography size=\"md\">3.25%</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"App Performance\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.performanceLegendWrapper}>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"warning\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  Integration\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"primary\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  SDK\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.progressSection}>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                Integration\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={77}\r\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                SDK\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={73}\r\n                classes={{ barColorPrimary: classes.progressBarWarning }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n    \r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <ResponsiveContainer width=\"100%\" height={144}>\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={PieChartData}\r\n                      innerRadius={30}\r\n                      outerRadius={40}\r\n                      dataKey=\"value\"\r\n                    >\r\n                      {PieChartData.map((entry, index) => (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={theme.palette[entry.color].main}\r\n                        />\r\n                      ))}\r\n                    </Pie>\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div className={classes.pieChartLegendWrapper}>\r\n                  {PieChartData.map(({ name, value, color }, index) => (\r\n                    <div key={color} className={classes.legendItemContainer}>\r\n                      <Dot color={color} />\r\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\r\n                        &nbsp;{name}&nbsp;\r\n                      </Typography>\r\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                        &nbsp;{value}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  Daily Line Chart\r\n                </Typography>\r\n                <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"warning\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Tablet\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Mobile\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Desktop\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <Select\r\n                  value={mainChartState}\r\n                  onChange={e => setMainChartState(e.target.value)}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={0}\r\n                      classes={{\r\n                        notchedOutline: classes.mainChartSelectRoot,\r\n                        input: classes.mainChartSelect,\r\n                      }}\r\n                    />\r\n                  }\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"daily\">Daily</MenuItem>\r\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                </Select>\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n              <ComposedChart\r\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\r\n                data={mainChartData}\r\n              >\r\n                <YAxis\r\n                  ticks={[0, 2500, 5000, 7500]}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <XAxis\r\n                  tickFormatter={i => i + 1}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <Area\r\n                  type=\"natural\"\r\n                  dataKey=\"desktop\"\r\n                  fill={theme.palette.background.light}\r\n                  strokeWidth={0}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"mobile\"\r\n                  stroke={theme.palette.primary.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"linear\"\r\n                  dataKey=\"tablet\"\r\n                  stroke={theme.palette.warning.main}\r\n                  strokeWidth={2}\r\n                  dot={{\r\n                    stroke: theme.palette.warning.dark,\r\n                    strokeWidth: 2,\r\n                    fill: theme.palette.warning.main,\r\n                  }}\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n        {mock.bigStat.map(stat => (\r\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\r\n            <BigStat {...stat} />\r\n          </Grid>\r\n        ))}\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            title=\"Support Requests\"\r\n            upperTitle\r\n            noBodyPadding\r\n            bodyClass={classes.tableWidget} >\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid>\r\n      </Grid> */}\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\maps\\Maps.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\Sidebar.js",["526","527","528","529","530","531","532"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Textsms as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  InsertEmoticon as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  SettingsPower as LogoutIcon,\r\n  Contacts as ContactIcon,\r\n  Person as PersonIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  {\r\n    id: 1,\r\n    label: \"Messages\",\r\n    link: \"/app/message\",\r\n    icon: <TypographyIcon />,\r\n  },\r\n  { id: 2, label: \"Users\", link: \"/app/users\", icon: <TableIcon /> },\r\n  {\r\n    id: 3,\r\n    label: \"Contacts\",\r\n    link: \"/app/contacts\",\r\n    icon: <ContactIcon />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"Profile\",\r\n    link: \"/app/profile\",\r\n    icon: <PersonIcon />,\r\n  },\r\n  ,{\r\n    id: 5,\r\n    label: \"Logout\",\r\n    link: \"/app/logout\",\r\n    icon: <LogoutIcon />,\r\n  },\r\n  // {\r\n  //   id: 6,\r\n  //   label: \"Notifications\",\r\n  //   link: \"/app/notifications\",\r\n  //   icon: <NotificationsIcon />,\r\n  // },\r\n  // {\r\n  //   id: 7,\r\n  //   label: \"UI Elements\",\r\n  //   link: \"/app/ui\",\r\n  //   icon: <UIElementsIcon />,\r\n  //   children: [\r\n  //     { label: \"Icons\", link: \"/app/ui/icons\" },\r\n  //     { label: \"Charts\", link: \"/app/ui/charts\" },\r\n  //     { label: \"Maps\", link: \"/app/ui/maps\" },\r\n  //   ],\r\n  // },\r\n  // { id: 8, type: \"divider\" },\r\n  // { id: 9, type: \"title\", label: \"HELP\" },\r\n  // { id: 10, label: \"Library\", link: \"https://flatlogic.com/templates\", icon: <LibraryIcon /> },\r\n  // { id: 11, label: \"Support\", link: \"https://flatlogic.com/forum\", icon: <SupportIcon /> },\r\n  // { id: 12, label: \"FAQ\", link: \"https://flatlogic.com/forum\", icon: <FAQIcon /> }\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Header\\Header.js",["533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n           Admin\r\n        </Typography>\r\n        {/* <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              John Smith\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n              Flalogic.com\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div> */}\r\n        {/* </Menu> */}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\mock.js",[],["563","564"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\styles.js",["565"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Widget\\Widget.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\icons\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\charts\\components\\ApexLineChart.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\maps\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Header\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Notification\\Notification.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Widget\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\PageTitle\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\Notification\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\components\\UserAvatar\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\contacts.js",["566","567","568"],"import React,{useEffect, useState} from \"react\";\r\nimport API from \"../../config\";\r\nimport { Grid, Button, CircularProgress,\r\n  Fade,Typography} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableOverflow: {\r\n    overflow: 'auto'\r\n  },\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}))\r\n\r\nconst Contacts = (props) => {\r\n\r\nconst classes = useStyles();\r\n\r\nconst [isLoading, setIsLoading] = useState(false);\r\nconst [dataa, setDataa] = useState([]);\r\n\r\nconst isAuth =  JSON.parse(localStorage.getItem('TOKEN'));\r\n\r\n  const usersData = () => {\r\n    setIsLoading(true);\r\n     const userCompanyID = isAuth.user.role === \"user\" ? isAuth.user.company :\"admin\" ;\r\n     fetch(`${API}/contacts`,{\r\n        method: \"POST\",\r\n        headers: {\r\n        \"Authorization\" : `Bearer ${isAuth.token}`,\r\n        \"Content-Type\": \"application/json\"\r\n          },\r\n        body: JSON.stringify({userCompanyID})\r\n      }).then(res => res.json()).then(resp => (setDataa(resp.contact)))\r\n    setIsLoading(false);\r\n  }\r\n\r\nuseEffect(() => { \r\n    usersData();\r\n      }, []);\r\n\r\n      console.log(dataa);\r\n\r\n      let datatableData = [];\r\n      dataa.forEach(element => {\r\n        datatableData.push(\r\n          [`${element.name}` ,`${element.email}`,  `${element.mobile_number}` , `${element.country_code}`] \r\n          )\r\n        }) \r\n      const columns = [\"Name\" , \"Email\" , \"Mobile Number\" ,\"Country Code\"]; \r\n    \r\n    const addContactHandler = () => {\r\n          props.history.push(\"/app/contact/register\");\r\n      }\r\n\r\n    const addGroupHandler = () => {\r\n        props.history.push(\"/app/group/register\")\r\n      }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Contacts\" />\r\n      { isLoading ? (<Fade in={isLoading}>\r\n                        <CircularProgress color=\"secondary\" />\r\n                    </Fade>) : null }\r\n      <Button\r\n          onClick={addContactHandler}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\" >\r\n          Add Contact \r\n      </Button>\r\n      <Button\r\n          onClick={addGroupHandler}\r\n          variant=\"contained\"\r\n          color=\"Secondary\"\r\n          size=\"large\" >\r\n          Create Group \r\n      </Button>\r\n\r\n      <Button\r\n          onClick={() => props.history.push(\"/app/contacts/addexcel\")}\r\n          variant=\"contained\"\r\n          style={{float:\"right\"}}\r\n          color=\"inherit\"\r\n          size=\"large\" >\r\n            Upload Contacts\r\n        </Button>\r\n     \r\n     <br/><br/><br/>\r\n        <Grid item xs={12}>\r\n            <MUIDataTable\r\n              title=\"All Contacts\"\r\n              data={datatableData}\r\n              columns={columns}\r\n              options={{\r\n                filter: true,\r\n                print: false,\r\n                viewColumns: false,\r\n                selectableRows: 'none',\r\n              }}\r\n            />\r\n        </Grid>\r\n        <br/>\r\n       \r\n    \r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default withRouter(Contacts);","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\dashboard\\components\\contactsTable\\contactsTable.js",[],["569","570"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\contacts\\contacts.js",["571"],"import React from \"react\";\r\nimport { Grid} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {\r\n  Edit as EditIcon,\r\n} from \"@material-ui/icons\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport Table from \"../dashboard/components/contactsTable/contactsTable\";\r\n\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableOverflow: {\r\n    overflow: 'auto'\r\n  }\r\n}))\r\n\r\nexport default function Tables() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Contacts\" />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Widget title=\"All Contacts\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n            <Table data={mock.contacts} />\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\dashboard\\components\\contactsTable\\contactsTable.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\profile\\profile.js",["572","573","574","575","576"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\profile\\profile.js",["577","578","579","580","581"],"import React, {useState} from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport {isAuthenticated } from \"../../context/UserContext\"\r\nimport {\r\n    Person as AccountIcon,\r\n  } from \"@material-ui/icons\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\n\r\n\r\nexport default function MessagePage() {\r\n  var classes = useStyles();\r\n\r\n  const isAuth =  JSON.parse(localStorage.getItem('TOKEN'));\r\n\r\n   // local\r\n   var [isLoading, setIsLoading] = useState(false);\r\n   var [error, setError] = useState(null);\r\n  //  var [contactValue, setContactValue] = useState(\"\")\r\n  //  var [messageValue, setMessageValue] = useState(\"\")\r\n \r\n  return (\r\n    <>\r\n      <PageTitle title=\"Profile\" />\r\n      <Grid container spacing={4} >\r\n        \r\n        <Grid item md={3/7/5} >\r\n          <Widget title=\"USER PROFILE\" disableWidgetMenu  >\r\n                <AccountIcon  className={classes.sizeOfFont} />\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={9}>\r\n          <Widget title=\"USER DETAILS\" disableWidgetMenu>\r\n            <br/>\r\n            <div className={classes.dashedBorder} >\r\n              <Typography size=\"md\"> Name  : {isAuth.user.name}</Typography>\r\n              { isAuth.user.role === \"user\" ? <Typography size=\"md\"> Company : {isAuth.companyName}</Typography> : null }\r\n              <Typography size=\"md\"> Role  : {isAuth.user.role}</Typography>\r\n              <Typography size=\"md\"> Email : {isAuth.user.email}</Typography>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\profile\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\MyApp\\src\\pages\\profile\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\UserRegister.js",["582","583","584"],"import React, { useState, useEffect } from \"react\";\r\nimport API from \"../../config\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// context\r\nimport {SignupUser } from \"../../context/UserContext\";\r\n\r\nconst UserRegister = (props) => {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role , setRole] = useState(\"\")\r\n  const [allcompany, setAllCompany] = useState([])\r\n  const [company, setCompany] = useState([])\r\n\r\nconst isAuth =  JSON.parse(localStorage.getItem('TOKEN'));\r\n\r\nconst companies = async() => {\r\n  const company = await fetch(`${API}/companies`,{\r\n                  method: \"GET\",\r\n                  headers: {\r\n                        \"Authorization\": `${isAuth.token}`,\r\n                        \"Content-Type\": \"application/json\"\r\n                }\r\n              }).then(response => response.json());\r\n\r\n    setAllCompany(company);\r\n    setIsLoading(false);\r\n}\r\n\r\nuseEffect(() => {\r\n    companies();\r\n    if(isAuth.user.role===\"user\"){\r\n        setRole(\"user\");\r\n        setCompany(`${isAuth.user.company}`);\r\n    }\r\n  }, [])\r\n\r\n  const userSignup = async(name, email, password, role, company) => {\r\n    setIsLoading(true);\r\n    console.log(\"name : \" +name);\r\n    console.log(\"email : \" +email);\r\n    console.log(\"password : \" +password);\r\n    console.log(\"role : \" +role);\r\n    console.log(\"company : \" +company);\r\n\r\n        await SignupUser(name, email, password, role, company, isAuth.user._id).then(response => {\r\n              if(response.error) {\r\n                  setError(response.error);\r\n                  setIsLoading(false);\r\n              }else{\r\n                setCompany(\"\");\r\n                setRole(\"\");\r\n                setPassword(\"\");\r\n                setEmail(\"\");\r\n                setName(\"\");\r\n                setError(false);\r\n                setIsLoading(false);\r\n              }\r\n          })\r\n        }\r\n\r\n  return (\r\n    <>\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n      \r\n        {/* ///////////////////Signup User///////////////////// */}\r\n            <React.Fragment>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                Create User\r\n              </Typography>\r\n\r\n              <br/><br/>\r\n              {error && error.length > 6 ? (\r\n                <Fade in={error}>\r\n                  <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                      {error}\r\n                  </Typography>\r\n                </Fade>    \r\n              )  : null }\r\n\r\n              <br/><br/>\r\n              <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Full Name\"\r\n                type=\"text\"\r\n                autoComplete='off'\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                autoComplete='off'\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                autoComplete='off'\r\n                fullWidth\r\n              />\r\n<br/>\r\n            {isAuth.user.role === \"user\" ? \r\n              null\r\n               :\r\n              <div>\r\n                <InputLabel id=\"role\"> Role </InputLabel>\r\n                <Select labelId=\"role\" id=\"role\"  onChange={e => setRole(e.target.value)}  className={classes.dropContainer}>\r\n                  <MenuItem value=\"user\" > User  </MenuItem>\r\n                  <MenuItem value=\"admin\" > Admin  </MenuItem>\r\n                </Select> \r\n              </div>\r\n            } \r\n<br/>\r\n            {isAuth.user.role === \"user\" ?\r\n              null\r\n                :  \r\n                  (  <div>\r\n                        <InputLabel id=\"company\"> Company </InputLabel>\r\n                        <Select labelId=\"company\" id=\"company\"  onChange={e => setCompany(e.target.value)} disabled={role.length === 0 || role === \"admin\"} className={classes.dropContainer}>\r\n                          {allcompany && allcompany.map((comp, i) => {\r\n                            return <MenuItem value={comp._id} key={i}> {comp.name} </MenuItem>\r\n                          })}\r\n                        </Select> \r\n                      </div> )\r\n                  }\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      userSignup(\r\n                        name,\r\n                        email,\r\n                        password,\r\n                        role,\r\n                        company,\r\n                      )\r\n                    }\r\n                    disabled={\r\n                      email.length === 0 ||\r\n                      password.length === 0 ||\r\n                      name.length === 0 ||\r\n                      role.length === 0 ||\r\n                      role === \"user\" ? company.length === 0  : null \r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Create \r\n                  </Button>\r\n                )}\r\n              </div>\r\n             \r\n              {/* <Button\r\n                size=\"large\"\r\n                className={classnames(\r\n                  classes.googleButton,\r\n                  classes.googleButtonCreating,\r\n                )}\r\n              >\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button> */}\r\n            </React.Fragment>\r\n\r\n        </div> \r\n      </div>\r\n    </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(UserRegister);\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\CompanyRegister.js",["585","586","587","588","589"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Fade,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// context\r\nimport { useUserDispatch, SignupCompany } from \"../../context/UserContext\";\r\n\r\nfunction CompanyRegister(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  const [company, setCompany] = useState(\"\")\r\n\r\n  const [address1, setAddress1] = useState(\"\")\r\n  const [address2, setAddress2] = useState(\"\")\r\n  const [state, setState] = useState(\"\")\r\n  const [city, setCity] = useState(\"\")\r\n  const [pincode, setPincode] = useState(\"\")\r\n  const [gstin, setGstin] = useState(\"\")\r\n\r\nconst isAuth =  JSON.parse(localStorage.getItem('TOKEN'));\r\n\r\n  const companyRegister = async(company, address1, address2, state, city, pincode, gstin) => {\r\n    await SignupCompany(company, address1, address2, state, city, pincode, gstin, isAuth.user._id).then(response => {\r\n      if(response.error) {\r\n        setError(response.error);\r\n        setIsLoading(false);\r\n      }else{\r\n        setCompany(\"\");\r\n        setAddress1(\"\");\r\n        setAddress2(\"\");\r\n        setState(\"\");\r\n        setCity(\"\");\r\n        setPincode(\"\");\r\n        setGstin(\"\");\r\n        setError(false);\r\n        setIsLoading(false);\r\n        props.history.push(\"/app/users\");\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n\r\n           {/* ///////////////////Signup Company///////////////////// */}\r\n            <React.Fragment>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                Company\r\n              </Typography>\r\n\r\n              <Fade in={isLoading}>\r\n                  <CircularProgress color=\"secondary\" />\r\n              </Fade>\r\n\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n\r\n              <TextField\r\n                id=\"Company\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={company}\r\n                onChange={e => setCompany(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Company\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"address1\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={address1}\r\n                onChange={e => setAddress1(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Address 1\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"address 2\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={address2}\r\n                onChange={e => setAddress2(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Address 2\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"state\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={state}\r\n                onChange={e => setState(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"State\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"city\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={city}\r\n                onChange={e => setCity(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"City\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"pincode\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={pincode}\r\n                onChange={e => setPincode(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Pincode\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"gstin\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={gstin}\r\n                onChange={e => setGstin(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"GSTIN\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n        \r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      companyRegister(\r\n                          company,\r\n                          address1,\r\n                          address2,\r\n                          state,\r\n                          city,\r\n                          pincode,\r\n                          gstin\r\n                        )\r\n                      }\r\n                    disabled={\r\n                      company.length === 0 ||\r\n                      address1.length === 0 ||\r\n                      state.length === 0 ||\r\n                      city.length === 0 ||\r\n                      pincode.length === 0\r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Create your account\r\n                  </Button>\r\n                )}\r\n              </div>\r\n             \r\n            </React.Fragment>\r\n        \r\n        </div> <br></br>\r\n        {/* <Typography color=\"primary\" className={classes.copyright}>\r\n        © 2020-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://www.vistaura.com/\" rel=\"noopener noreferrer\" target=\"_blank\"> Vistaura </a>, LLC. All rights reserved.\r\n        </Typography> */}\r\n      </div>\r\n    </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(CompanyRegister);\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\addContact.js",["590"],"import React, { useState, useEffect } from \"react\";\r\nimport API from \"../../config\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Fade,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import isAuthenticated}\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\nfunction AddContacts(props) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [allcompany, setAllCompany] = useState([]);\r\n  const [company, setCompany] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [countrycode, setCountryCode] = useState(\"\");\r\n  const [email , setEmail] = useState(\"\")\r\n  const [name, setName] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\");\r\n  const [allcountrycode, setAllCountryCode] = useState([]);\r\n\r\n  const addContactsHandler = async(name, company,mobile,countrycode,email) => {\r\n    try{\r\n      setIsLoading(true);\r\n       const userID = isAuth.user._id;\r\n      const contactRegister = await fetch(`${API}/contact/signup`,{\r\n             method: \"POST\",\r\n             headers: {\r\n                       Accept:  \"application/json\",\r\n                     \"Content-Type\": \"application/json\"\r\n             },\r\n             body: JSON.stringify({name, company ,mobile_number : mobile, country_code : countrycode, email, createdBy: userID})\r\n           }).then(response => response.json());\r\n \r\n           if(contactRegister.error) {\r\n             throw Error(\"Fill the Valid Details Only\");\r\n           }\r\n          console.log(\"contactRegister :\" +JSON.stringify(contactRegister));\r\n          setIsLoading(false);\r\n          setAllCompany(\"\")\r\n          setCompany(\"\")\r\n          setMobile(\"\")\r\n          setCountryCode(\"\")\r\n          setEmail(\"\")\r\n          setMessage(contactRegister.message);\r\n   }catch(error){\r\n     console.log(\"JSON.setr : \" +JSON.stringify(error));\r\n      setError(error.message);\r\n      setIsLoading(false);\r\n   }\r\n}\r\n    \r\nconst isAuth =  JSON.parse(localStorage.getItem('TOKEN'));\r\n\r\n\r\n  const companies = async() => {\r\n    const company = await fetch(`${API}/companies`,{\r\n                    method: \"GET\",\r\n                    headers: {\r\n                          \"Authorization\": `${isAuth.token}`,\r\n                          \"Content-Type\": \"application/json\"\r\n                  }\r\n                }).then(response => response.json());\r\n  \r\n      setAllCompany(company);\r\n      setIsLoading(false);\r\n  }\r\n\r\n  const fetchCountryCode = async() => {\r\n    await fetch(\"https://gist.githubusercontent.com/anubhavshrimal/75f6183458db8c453306f93521e93d37/raw/f77e7598a8503f1f70528ae1cbf9f66755698a16/CountryCodes.json\")\r\n        .then(resp => resp.json()).then(data => setAllCountryCode(data));\r\n  }\r\n  \r\n  useEffect(() => {\r\n      companies();\r\n      fetchCountryCode();\r\n      if(isAuth.user.role === \"user\") {\r\n        setCompany(isAuth.user.company);\r\n      }\r\n    }, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>     \r\n\r\n        {/* ///////////////////Add Contacts///////////////////// */}\r\n            <React.Fragment>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                 Contacts \r\n              </Typography>\r\n              <br/><br/>\r\n              { isLoading ? (<Fade in={isLoading} style={{marginLeft:\"50px\"}} >\r\n                            <CircularProgress color=\"secondary\" />\r\n                        </Fade>) : null }\r\n\r\n              {error && error.length > 6 ? (\r\n                <Fade in={error}>\r\n                  <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                      {error}\r\n                  </Typography>\r\n                </Fade>    \r\n              )  : null }\r\n\r\n            {message && message.includes(\"Created\") ?\r\n                <Fade in={message}>\r\n                <Typography color=\"primary\" className={classes.errorMessage}>\r\n                    {message}\r\n                </Typography>\r\n              </Fade> : null}\r\n\r\n<br/><br/>\r\n              {isAuth.user.role === \"user\" ?\r\n                    null\r\n                //   <div>\r\n                //   <InputLabel id=\"company\"> Company </InputLabel>\r\n                //     <Select labelId=\"company\" id=\"company\" value={isAuth.user.company} disabled className={classes.dropContainer}>\r\n                //       <MenuItem  value={isAuth.user.company}> {isAuth.companyName}  </MenuItem>\r\n                //     </Select> \r\n                // </div>    \r\n                      :\r\n                        ( <div>\r\n                            <InputLabel id=\"company\"> Company </InputLabel>\r\n                            <Select labelId=\"company\" id=\"company\" value={company}  onChange={e => setCompany(e.target.value)} className={classes.dropContainer}>\r\n                              {allcompany && allcompany.map((comp, i) => {\r\n                                return <MenuItem value={comp._id} key={i}> {comp.name} </MenuItem>\r\n                              })}\r\n                            </Select> \r\n                          </div> )\r\n              }\r\n\r\n          <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"mobile\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={mobile}\r\n                onChange={e => setMobile(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Mobile Number\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n<br/>\r\n            <InputLabel id=\"group\"> Country Code </InputLabel>\r\n            <Select labelId=\"group\" id=\"group\" value={countrycode} onChange={e => setCountryCode(e.target.value)}  className={classes.groupDownButton}>\r\n              {allcountrycode && allcountrycode.map((comp, i) => {\r\n                  return <MenuItem value={comp.dial_code} key={i}> {comp.dial_code + \"  \" + comp.name} </MenuItem>\r\n                })}\r\n            </Select> \r\n\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      addContactsHandler(\r\n                            name,\r\n                            company,\r\n                            mobile,\r\n                            countrycode,\r\n                            email\r\n                           )\r\n                        }\r\n                    disabled={\r\n                      company.length === 0 ||\r\n                      email.length === 0 ||\r\n                      mobile.length === 0 ||\r\n                      countrycode.length === 0 \r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}  >\r\n                    Create\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            \r\n            </React.Fragment>\r\n\r\n        </div> <br></br>\r\n        {/* <Typography color=\"primary\" className={classes.copyright}>\r\n        © 2020-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://www.vistaura.com/\" rel=\"noopener noreferrer\" target=\"_blank\"> Vistaura </a>, LLC. All rights reserved.\r\n        </Typography> */}\r\n      </div>\r\n    </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(AddContacts);\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\styles.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\createGroups.js",["591","592","593","594"],"import React, { useState, useEffect} from \"react\";\r\nimport API from \"../../config\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Fade,Fab \r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SubtractIcon from \"@material-ui/icons/Remove\"\r\nimport { GroupRegistration } from \"../../context/UserContext\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n// context\r\n\r\nfunction CreateGroups(props) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [contacts, setContacts] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [dataa, setDataa] = useState([]);\r\n  const [mobilenumbers, setMobileNumbers] = useState([]);\r\n  const [disablebutton , setDisablebutton] = useState([]);\r\n  const [userid, setUserId] = useState([]);\r\n\r\n  const isAuth =  JSON.parse(localStorage.getItem('TOKEN'));\r\n\r\n  const usersData = () => {\r\n    const userCompanyID = isAuth.user.role === \"user\" ? isAuth.user.company :\"admin\" ;;\r\n    fetch(`${API}/contacts`,{\r\n       method: \"POST\",\r\n       headers: {\r\n       \"Authorization\" : `Bearer ${isAuth.token}`,\r\n       \"Content-Type\": \"application/json\"\r\n         },\r\n       body: JSON.stringify({userCompanyID})\r\n     }).then(res => res.json()).then(resp => (setDataa(resp.contact)))\r\n }\r\n\r\n  useEffect(() => { \r\n    usersData();\r\n      }, []);\r\n\r\n    let datatableData = [];\r\n\r\n    const addUserToGroup = async(i) => {\r\n        datatableData.splice(i,1);\r\n        console.log(datatableData);\r\n\r\n        let idOfSelectedUsers = [ ...userid];\r\n        idOfSelectedUsers.push(dataa[i]._id);\r\n        setUserId(idOfSelectedUsers)\r\n\r\n        let disabledButton = [ ...disablebutton];\r\n        disabledButton.push(dataa[i].name);\r\n        setDisablebutton(disabledButton); //disable add button;\r\n        console.log(\"disabledButton while adding : \" +disabledButton);\r\n\r\n        let mobileNumbersArr = [...mobilenumbers];\r\n        mobileNumbersArr.push(dataa[i].name);\r\n        setMobileNumbers(mobileNumbersArr)\r\n        console.log(\"mobileNumbersArr : \" +mobileNumbersArr.length);\r\n    }\r\n\r\n    const removeUserFromGroup = async(i) => {\r\n      console.log(\"remove index : \" +i);\r\n      console.log(\"disablebutton length : + \" +disablebutton.length);\r\n\r\n      const findingElement = dataa[i].name;\r\n      console.log(\"findingElement : \" +findingElement);\r\n\r\n    const newArr = mobilenumbers.filter((mobile) => {\r\n              console.log(\"filter mobile : \" +mobile);\r\n              return findingElement !== mobile\r\n          })\r\n        console.log(\"newArr : \" +newArr);\r\n        setMobileNumbers(newArr);\r\n        setDisablebutton(newArr);\r\n    }\r\n  \r\n    const createGroupHandler = async(name) => {\r\n          setIsLoading(true);\r\n    \r\n          await GroupRegistration(userid, name, isAuth.user._id, isAuth.token).then(response => {\r\n                 if(response.error) {\r\n                     setIsLoading(false);\r\n                     setError(true);\r\n                     setMessage(response.error);\r\n                 }else{\r\n                     setIsLoading(false);\r\n                     setError(false);\r\n                     setName(\"\");\r\n                     setMobileNumbers(\"\");\r\n                     setDisablebutton(\"\");\r\n                     setMessage(response.message);\r\n                 }\r\n                 setTimeout(() => { \r\n                    setMessage(\"\");\r\n                  }, 3000);\r\n          })\r\n    }\r\n\r\n     dataa.forEach((element,i)=> {\r\n       console.log(\"i : \"+ i);\r\n       datatableData.push(\r\n         [                                                      \r\n          <Fab size=\"small\" onClick={() => addUserToGroup(i)} key={i} disabled={disablebutton.includes(element.name)} color=\"primary\"  aria-label=\"add\">\r\n              <AddIcon />\r\n          </Fab> ,\r\n          <Fab size=\"small\" onClick={() => removeUserFromGroup(i)} key={i} disabled={!mobilenumbers.includes(element.name)}  color=\"secondary\"  aria-label=\"remove\">\r\n            <SubtractIcon />\r\n          </Fab>, `${element.name}` , `${element.email}`,  `${element.mobile_number}` , `${element.country_code}`,] \r\n         )\r\n       }) \r\n     const columns = [\"Add\" , \"Remove\", \"Name\", \"Email\" , \"Mobile Number\" ,\"Country Code\" ]; \r\n\r\n  return (\r\n    <React.Fragment>\r\n          \r\n    <Grid container className={classes.container}>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>     \r\n\r\n        {/* ///////////////////Signup Group///////////////////// */}\r\n            <React.Fragment>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                 Group\r\n              </Typography>\r\n\r\n              {message && message.includes(\"Created\") ?\r\n                   <Fade in={message}>\r\n                    <Typography color=\"primary\" className={classes.errorMessage}>\r\n                        {message}\r\n                    </Typography>\r\n                 </Fade> : (<Fade in={message}>\r\n                    <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                        {message}\r\n                    </Typography>\r\n                 </Fade>)  }\r\n             \r\n              <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Group Name\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                fullWidth\r\n              />\r\n\r\n              <TextField\r\n                id=\"contact\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={mobilenumbers}\r\n                // onChange={e => contactChangedHandler}\r\n                margin=\"normal\"\r\n                placeholder=\"Contacts\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                fullWidth\r\n              />\r\n\r\n              <div className={classes.creatingButtonContainer}>\r\n                  <Button\r\n                    onClick={() =>\r\n                      createGroupHandler(\r\n                            name\r\n                           )\r\n                        }\r\n                    disabled={\r\n                      mobilenumbers.length === 0 ||\r\n                      name.length === 0 \r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}  >\r\n                    Create\r\n                  </Button>\r\n              </div>\r\n\r\n              { isLoading ? (<Fade in={isLoading} style={{marginLeft:\"50px\"}} >\r\n                            <CircularProgress color=\"secondary\" />\r\n                        </Fade>) : null }\r\n            \r\n            </React.Fragment>\r\n\r\n        </div> <br></br>\r\n      \r\n      </div>\r\n    </Grid>\r\n\r\n    <Grid item xs={12} md={12} className={classes.dataTable}>\r\n                  <MUIDataTable\r\n                      title=\"All Contacts\"\r\n                      data={datatableData}\r\n                      columns={columns}\r\n                      options={{\r\n                          filter: true,\r\n                          print: false,\r\n                          viewColumns: false,\r\n                          selectableRows: 'none',\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(CreateGroups);\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\PersonalMessage.js",["595"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\allContactMessage.js",["596","597"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\groupMessage.js",["598","599","600"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\personalMessage.js",["601","602","603","604","605","606"],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\message\\message.js",["607","608","609","610"],"import React,{useEffect, useState} from \"react\";\r\nimport { Grid , Button, Fab, Select,MenuItem, CircularProgress, Fade} from \"@material-ui/core\";\r\nimport PersonalMessage from \"./personalMessage\";\r\nimport GroupMessage from \"./groupMessage\";\r\nimport AllContacts from \"./allContactMessage\";\r\n// import { Send as SendIcon, Navigation as NavigationIcon } from \"@material-ui/icons\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\n\r\n\r\nexport default function MessagePage(props) {\r\n\r\n  const [isLoading, setIsLoading] = useState(\"\");\r\n  const [changePage, setChangePage] = useState(\"\");\r\n\r\n  var classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Message\" />\r\n\r\n        <Grid item xs={12} md={4} style={{textAlign:\"center\", margin:\"auto\"}}>\r\n            {/* <div className={classes.buttonBackground}> */}\r\n            <div className={classes.borderStyle}>\r\n              <Select\r\n                  value={changePage}\r\n                  className={classes.select}\r\n                  placeholder=\"Choose Option\"\r\n                  onChange={(e) => setChangePage(e.target.value)} \r\n                  inputProps={{\r\n                      classes: {\r\n                          icon: classes.icon,\r\n                      },\r\n                  }} >\r\n                  <MenuItem value=\"personal\">  Send Personal Message  </MenuItem>\r\n                  <MenuItem value=\"group\">  Send Group Message  </MenuItem>\r\n                  <MenuItem value=\"allcontact\">  Send Message To All  </MenuItem>\r\n              </Select>   \r\n            </div>\r\n\r\n            { isLoading ? (<Fade in={isLoading}>\r\n                        <CircularProgress color=\"secondary\" />\r\n                    </Fade>) : null }\r\n{/*               \r\n            <Fab\r\n              onClick={() => props.history.push(\"/app/message/personalmessage\")}\r\n              variant=\"extended\"\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              className={classes.button}\r\n            >\r\n              <NavigationIcon className={classes.extendedIcon} />\r\n               \r\n            </Fab>\r\n           \r\n              <Fab\r\n                onClick={() => props.history.push(\"/app/message/groupmessage\")}\r\n                variant=\"extended\"\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                aria-label=\"add\"\r\n                className={classes.button}\r\n              >\r\n                <NavigationIcon className={classes.extendedIcon} />\r\n                  Send Group Message \r\n              </Fab>\r\n           \r\n              <Fab\r\n                onClick={() => props.history.push(\"/app/message/allcontacts\")}\r\n                variant=\"extended\"\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                aria-label=\"add\"\r\n                className={classes.button}\r\n               >\r\n                <NavigationIcon className={classes.extendedIcon} />\r\n                  Send Message To All \r\n              </Fab> */}\r\n              \r\n            {/* </div>    */}\r\n      </Grid>\r\n      <Grid item xs={12} md={12} className={classes.backgroundSetting}>\r\n        <Widget disableWidgetMenu> \r\n              {changePage === \"personal\" ? <PersonalMessage /> : null }\r\n              {changePage === \"group\" ? <GroupMessage /> : null }\r\n              {changePage === \"allcontact\" ? <AllContacts /> : null }\r\n        </Widget>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\uploadSheet.js",["611","612","613","614"],"import React, {useState, useEffect} from 'react';\r\nimport API from \"../../config\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, CircularProgress,\r\n    Fade, Typography, InputLabel,Select,MenuItem} from \"@material-ui/core\";\r\nimport ColumnMapping from \"./columnMapping\"\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst UploadExcelSheet = (props) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [excelMessage, setExcelMessage] = useState(\"\");\r\n    const [values, setValues] = useState({formData : \"\"});\r\n    const [available ,setAvailable] = useState(false);\r\n    const [filename, setFileName] = useState(\"\");\r\n    const [allcompany, setAllCompany] = useState([])\r\n    const [company, setCompany] = useState([])\r\n\r\n    const { formData } = values;\r\n\r\n  const classes = useStyles();\r\n\r\n  const isAuth =  JSON.parse(localStorage.getItem('TOKEN'));\r\n\r\n  const companies = async() => {\r\n    const company = await fetch(`${API}/companies`,{\r\n                    method: \"GET\",\r\n                    headers: {\r\n                          \"Authorization\": `${isAuth.token}`,\r\n                          \"Content-Type\": \"application/json\"\r\n                  }\r\n                }).then(response => response.json());\r\n  \r\n      setAllCompany(company);\r\n      setIsLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    companies();\r\n    return (setValues({ formData : new FormData() }) );\r\n}, []);\r\n\r\n  const getExcelSheet = async() => {\r\n      try{\r\n        setIsLoading(true);\r\n        const response = await fetch(`${API}/download/excel`,{\r\n              method: \"POST\",\r\n              headers: {\r\n                  \"Authorization\" : `Bearer ${isAuth.token}`,\r\n              },\r\n              body: formData\r\n          }).then(res => res.json());\r\n\r\n          if(response.message.includes(\"failed\")) {\r\n                throw new Error(response.message)\r\n              }\r\n              setIsLoading(false);\r\n              setExcelMessage(response.message);\r\n              setValues({... values, formData : \"\" })\r\n              setFileName(response.fileName);\r\n              setTimeout(() => { \r\n                  setExcelMessage(\"\");\r\n                }, 4000);  \r\n                console.log(\"upload sheet : \" +filename);\r\n              // props.history.push(\"/app/contacts/addexcel/mapping\");\r\n              \r\n        }catch(error) {\r\n            console.log(\"error : \" +error.message);\r\n            setExcelMessage(error.message);\r\n            setIsLoading(false);\r\n\r\n            setTimeout(() => { \r\n                setExcelMessage(\"\");\r\n              }, 4000);  \r\n          }\r\n    }\r\n\r\n  const handleonchange = name => event => {\r\n        setAvailable(true);\r\n        const value = name === \"excelsheet\" ? event.target.files[0] : event.target.value\r\n        formData.set(name, value)\r\n        setValues({...values, [name] : value})  \r\n    }\r\n\r\n  return (\r\n   <div>\r\n       <Widget title=\"Add ExcelSheet\" disableWidgetMenu>\r\n        { isLoading ? (<Fade in={isLoading}>\r\n                        <CircularProgress color=\"primary\" />\r\n                    </Fade>) : null }\r\n  {filename.length === 0 ?  \r\n    <div>\r\n      {excelMessage && excelMessage.includes(\"Uploaded\") ?     \r\n                (<Fade in={excelMessage}>\r\n                    <Typography color=\"primary\" className={classes.errorMessage}>\r\n                        {excelMessage}\r\n                    </Typography>\r\n                </Fade>) : \r\n            (<Fade in={excelMessage}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                    {excelMessage}\r\n                </Typography>\r\n            </Fade>)  }\r\n\r\n              <form className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n<br/>\r\n              {isAuth.user.role === \"admin\" ? \r\n                  <div >\r\n                    <InputLabel id=\"company\"> Company </InputLabel>\r\n                    <Select labelId=\"company\" id=\"company\"  onChange={e => setCompany(e.target.value)} className={classes.dropContainer}>\r\n                        {allcompany && allcompany.map((comp, i) => {\r\n                          return <MenuItem value={comp._id} key={i}> {comp.name} </MenuItem>\r\n                        })}\r\n                    </Select> \r\n                </div>\r\n                  :\r\n                  null\r\n                } \r\n<br/>\r\n\r\n                  <p>Please select an Excel file from your computer:</p>\r\n\r\n                    <input type=\"file\"  onChange={handleonchange('excelsheet')}  name=\"excelsheet\" required/> \r\n                    <div className={classes.creatingButtonContainer}>\r\n                        <Button\r\n                            onClick={() =>  getExcelSheet() }\r\n                            disabled={\r\n                              available == false ||\r\n                              company === 0\r\n                            }\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            fullWidth\r\n                            className={classes.createAccountButton}  >\r\n                                Excel Upload\r\n                        </Button>\r\n                    </div>\r\n              </form>\r\n          </div>\r\n                  :\r\n              <div className={classes.mapp}>\r\n                  <br/>\r\n\r\n                {filename.length > 1 ? <ColumnMapping filename={filename} company={company}/>  : null }\r\n             </div> }\r\n\r\n       </Widget>\r\n   </div>\r\n  )\r\n}\r\nexport default withRouter(UploadExcelSheet);","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\contacts\\columnMapping.js",["615","616","617","618","619","620","621"],"import React, {useState, useEffect} from 'react';\r\nimport API from \"../../config\";\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button, CircularProgress,\r\n    Fade, Typography, Table,TableRow, TableHead, TableCell, InputLabel, Select, setCompany,MenuItem } from \"@material-ui/core\";\r\n\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\n\r\nfunction ColumnMapping(props) {\r\n\r\n    const [error, setError] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [excelMessage, setExcelMessage] = useState(\"\");\r\n    const [column, setColumn] = useState([]);     //column names from backend\r\n    const [name, setName] = useState(\"\");\r\n    const [nameColumn, setNameColumn] = useState(\"\");\r\n\r\n    const [mobile, setMobile] = useState(\"\");\r\n    const [mobileColumn, setMobileColumn] = useState(\"\");\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailColumn, setEmailColumn] = useState(\"\");\r\n\r\n    const [country, setCountry] = useState(\"\");\r\n    const [countryColumn, setCountryColumn] = useState(\"\");\r\n\r\n  \r\n  const classes = useStyles();\r\n\r\n  const isAuth =  JSON.parse(localStorage.getItem('TOKEN'));\r\n  \r\n  const mappingColumns = async(file) => {\r\n    const response = await fetch(`${API}/mappingsheet`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\" : `Bearer ${isAuth.token}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({file}) \r\n        }).then(res => res.json());\r\n\r\n        console.log(\"response : \" +response.header);\r\n        setColumn(response.header);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"props.filename +\" + props.filename);\r\n      mappingColumns(props.filename);\r\n  }, []);\r\n\r\n  const handleonChange = (e,i) => {\r\n\r\n    console.log(\"iiiiiii : \" +i);\r\n\r\n      if(e.target.value === \"name\") {\r\n        setNameColumn(i);\r\n        setName(e.target.value);\r\n      }\r\n      if(e.target.value === \"email\") {\r\n        setEmailColumn(i);\r\n        setEmail(e.target.value);\r\n      }\r\n      if(e.target.value === \"mobile_number\") {\r\n        setMobileColumn(i);\r\n        setMobile(e.target.value);\r\n      }\r\n      if(e.target.value === \"country_code\") {\r\n        setCountryColumn(i);\r\n        setCountry(e.target.value);\r\n      }\r\n  }\r\n\r\n  const uploadData = async() => {\r\n    try{\r\n      setIsLoading(true);\r\n\r\n      const Obj = {};\r\n      Obj[`${nameColumn}`] = name;\r\n      Obj[`${emailColumn}`] = email;\r\n      Obj[`${mobileColumn}`] = mobile;\r\n      Obj[`${countryColumn}`] = country;\r\n      Obj[\"filename\"] = props.filename;\r\n      Obj[\"originalCompanyID\"] = isAuth.user.company;\r\n\r\n      const response = await fetch(`${API}/upload/data`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Authorization\" : `Bearer ${isAuth.token}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(Obj)\r\n        }).then(res => res.json());\r\n\r\n        console.log(\"uploading response : \" +JSON.stringify(response));\r\n        if(response && response.message.includes(\"invalid\")) {\r\n              throw new Error(response.message)\r\n            }\r\n            setIsLoading(false);\r\n            setExcelMessage(response.message);\r\n\r\n            setMobile(\"\");\r\n            setEmail(\"\");\r\n            setCountry(\"\")\r\n            setTimeout(() => { \r\n                setExcelMessage(\"\");\r\n              }, 4000);  \r\n            \r\n            props.history.push(\"/app/contacts\");\r\n      }catch(error) {\r\n         console.log(error);\r\n          setIsLoading(false);\r\n          setExcelMessage(error.message)\r\n          setTimeout(() => { \r\n              setExcelMessage(\"\");\r\n            }, 4000);  \r\n        }\r\n  }\r\n\r\n  return (\r\n   <div>\r\n       <Widget title=\"Column Mapping\" disableWidgetMenu>\r\n        { isLoading ? (<Fade in={isLoading}>\r\n                        <CircularProgress color=\"secondary\" />\r\n                    </Fade>) : null }\r\n            {excelMessage && excelMessage.includes(\"Saved\") ?     \r\n                (<Fade in={excelMessage}>\r\n                    <Typography color=\"primary\" className={classes.errorMessage}>\r\n                        {excelMessage}\r\n                    </Typography>\r\n                </Fade>) : \r\n            (<Fade in={excelMessage}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                    {excelMessage}\r\n                </Typography>\r\n            </Fade>)  }\r\n\r\n            <br/><br/><br/>\r\n\r\n            <Table>\r\n                <TableRow>\r\n                      <TableCell>\r\n                          <b>Rows</b>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <b>Column Mapping</b>\r\n                      </TableCell>\r\n                </TableRow>\r\n                \r\n              { column && column.map((col, i) => { \r\n                  return ( \r\n                    <TableRow> \r\n                      <TableCell key={i}>\r\n                      { col }  :  \r\n                      </TableCell>\r\n  \r\n                      <TableCell key={i}>\r\n                        <Select labelId=\"columns\" id=\"columns\"  onChange={ e => handleonChange(e, i) } className={classes.mappingContainer}>\r\n                          <MenuItem value=\"name\" disabled={name.length > 1} > Name </MenuItem>\r\n                          <MenuItem value=\"mobile_number\" disabled={mobile.length > 1} > Mobile Number </MenuItem>\r\n                          <MenuItem value=\"country_code\" disabled={country.length > 1} > Country Code </MenuItem>\r\n                          <MenuItem value=\"email\" disabled={email.length > 1} > Email </MenuItem>\r\n                        </Select>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    )})}\r\n                \r\n             </Table> \r\n\r\n             <div className={classes.creatingButtonContainer}>\r\n                        <Button\r\n                            onClick={() => uploadData() }\r\n                            disabled={\r\n                              email.length === 0 ||\r\n                              mobile.length === 0 ||\r\n                              country.length === 0 \r\n                            }\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            fullWidth\r\n                            className={classes.createAccountButton}  >\r\n                               Map\r\n                        </Button>\r\n                    </div>\r\n       </Widget>\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(ColumnMapping);\r\n\r\n\r\n    // <p>Please select an Excel file from your computer:</p>\r\n    // <input type=\"file\" id=\"file-object\">\r\n    // <div id=\"result\"></div>\r\n\r\n//     <TextField\r\n//         id=\"file\"\r\n//         InputProps={{\r\n//           classes: {\r\n//             underline: classes.textFieldUnderline,\r\n//             input: classes.textField,\r\n//           },\r\n//         }}\r\n//         onChange={handleonchange('excelsheet')}\r\n//         // disabled = {response.length > 1}\r\n//         margin=\"normal\"\r\n//         placeholder=\"ExcelSheet\"\r\n//         type=\"file\"\r\n//       />\r\n\r\n// </Widget>\r\n","C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\config.js",[],"C:\\projects\\vistaura\\whatsapp\\whatsappFrontend\\myapp\\src\\pages\\users\\EditUser.js",["622","623","624","625"],"import React, { useState, useEffect } from \"react\";\r\nimport API from \"../../config\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Fade,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nconst EditUser = (props) => {\r\n    const classes = useStyles();\r\n\r\n    // local\r\n    const [edituser, setEditUser] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [email , setEmail] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n    const [role, setRole] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\nconst isAuth =  JSON.parse(localStorage.getItem('TOKEN'));\r\n\r\nconst updateUserHandler = async(name, role ,email) => {\r\n    try{\r\n      setIsLoading(true);\r\n      console.log(JSON.stringify(edituser));\r\n       const userID = isAuth.user._id;\r\n\r\n        const updateUser = await fetch(`${API}/user/update/${edituser._id}`,{\r\n             method: \"PATCH\",\r\n             headers: {\r\n                      Authorization: `Bearer ${isAuth.token}`,\r\n                     \"Content-Type\": \"application/json\"\r\n             },\r\n             body: JSON.stringify({name, role ,email, userid:edituser._id , modifiedBy:userID})\r\n           }).then(response => response.json());\r\n \r\n          console.log(JSON.stringify(updateUser));\r\n          setMessage(updateUser.message);\r\n          setRole(\"\");\r\n          setName(\"\");\r\n          setEmail(\"\");\r\n          window.location.reload();\r\n          setIsLoading(false);\r\n   }catch(error){\r\n     console.log(\"JSON.setr : \" +JSON.stringify(error));\r\n      setError(error.message);\r\n      setIsLoading(false);\r\n   }\r\n}\r\n    \r\n  useEffect(() => {\r\n     setEditUser(props.userToEdit);\r\n    \r\n    }, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.formContainer} style={{marginTop:\"5%\"}}>\r\n        <div className={classes.form}>     \r\n\r\n            <React.Fragment>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                 Edit User \r\n              </Typography>\r\n              <br/><br/>\r\n                { isLoading ? (<Fade in={isLoading} style={{marginLeft:\"50px\"}} >\r\n                                <CircularProgress color=\"secondary\" />\r\n                            </Fade>) : null }\r\n\r\n              {message && message.includes(\"Updated\") ? \r\n                    <Fade in={message}>\r\n                        <Typography color=\"primary\" className={classes.errorMessage}>\r\n                            {message}\r\n                        </Typography>\r\n                    </Fade> \r\n              : (\r\n                    <Fade in={error}>\r\n                        <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                            {error}\r\n                        </Typography>\r\n                    </Fade>    \r\n                )  }\r\n\r\n<br/><br/>\r\n            \r\n        <TextField\r\n            id=\"name\"\r\n            InputProps={{\r\n                classes: {\r\n                underline: classes.textFieldUnderline,\r\n                input: classes.textField,\r\n                },\r\n            }}\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n            margin=\"normal\"\r\n            placeholder={\"Name : - \" + edituser.name}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            fullWidth\r\n            />\r\n\r\n        <TextField\r\n            id=\"role\"\r\n            InputProps={{\r\n                classes: {\r\n                underline: classes.textFieldUnderline,\r\n                input: classes.textField,\r\n                },\r\n            }}\r\n            value={role}\r\n            onChange={e => setRole(e.target.value)}\r\n            margin=\"normal\"\r\n            placeholder={\"Role : - \" + edituser.role}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            fullWidth\r\n            /> \r\n\r\n            <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder={\"Email : - \" + edituser.email}\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                fullWidth\r\n              />\r\n\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      updateUserHandler(\r\n                            name,\r\n                            role,\r\n                            email\r\n                           )\r\n                        }\r\n                    disabled={\r\n                      name.length === 0 &&\r\n                      role.length === 0 &&\r\n                      email.length === 0 \r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}  >\r\n                        Edit\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            \r\n            </React.Fragment>\r\n\r\n        </div> <br></br>\r\n    \r\n      </div>\r\n    </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(EditUser);\r\n",{"ruleId":"626","replacedBy":"627"},{"ruleId":"628","replacedBy":"629"},{"ruleId":"630","severity":1,"message":"631","line":1,"column":16,"nodeType":"632","messageId":"633","endLine":1,"endColumn":24},{"ruleId":"630","severity":1,"message":"634","line":24,"column":8,"nodeType":"632","messageId":"633","endLine":24,"endColumn":17},{"ruleId":"630","severity":1,"message":"635","line":45,"column":10,"nodeType":"632","messageId":"633","endLine":45,"endColumn":20},{"ruleId":"630","severity":1,"message":"636","line":45,"column":22,"nodeType":"632","messageId":"633","endLine":45,"endColumn":35},{"ruleId":"630","severity":1,"message":"637","line":2,"column":8,"nodeType":"632","messageId":"633","endLine":2,"endColumn":17},{"ruleId":"630","severity":1,"message":"638","line":15,"column":3,"nodeType":"632","messageId":"633","endLine":15,"endColumn":12},{"ruleId":"630","severity":1,"message":"639","line":9,"column":21,"nodeType":"632","messageId":"633","endLine":9,"endColumn":32},{"ruleId":"630","severity":1,"message":"640","line":10,"column":19,"nodeType":"632","messageId":"633","endLine":10,"endColumn":30},{"ruleId":"630","severity":1,"message":"641","line":11,"column":18,"nodeType":"632","messageId":"633","endLine":11,"endColumn":25},{"ruleId":"630","severity":1,"message":"642","line":26,"column":8,"nodeType":"632","messageId":"633","endLine":26,"endColumn":11},{"ruleId":"643","severity":1,"message":"644","line":35,"column":19,"nodeType":"645","messageId":"646","endLine":84,"endColumn":2},{"ruleId":"630","severity":1,"message":"647","line":10,"column":3,"nodeType":"632","messageId":"633","endLine":10,"endColumn":7},{"ruleId":"630","severity":1,"message":"648","line":27,"column":29,"nodeType":"632","messageId":"633","endLine":27,"endColumn":35},{"ruleId":"649","severity":1,"message":"650","line":29,"column":13,"nodeType":"651","endLine":44,"endColumn":4},{"ruleId":"649","severity":1,"message":"652","line":44,"column":6,"nodeType":"645","endLine":44,"endColumn":8,"suggestions":"653"},{"ruleId":"649","severity":1,"message":"654","line":60,"column":10,"nodeType":"645","endLine":60,"endColumn":12,"suggestions":"655"},{"ruleId":"626","replacedBy":"656"},{"ruleId":"628","replacedBy":"657"},{"ruleId":"630","severity":1,"message":"631","line":1,"column":16,"nodeType":"632","messageId":"633","endLine":1,"endColumn":24},{"ruleId":"630","severity":1,"message":"658","line":126,"column":9,"nodeType":"632","messageId":"633","endLine":126,"endColumn":17},{"ruleId":"630","severity":1,"message":"659","line":5,"column":3,"nodeType":"632","messageId":"633","endLine":5,"endColumn":11},{"ruleId":"630","severity":1,"message":"660","line":9,"column":14,"nodeType":"632","messageId":"633","endLine":9,"endColumn":24},{"ruleId":"630","severity":1,"message":"647","line":9,"column":26,"nodeType":"632","messageId":"633","endLine":9,"endColumn":30},{"ruleId":"630","severity":1,"message":"661","line":10,"column":3,"nodeType":"632","messageId":"633","endLine":10,"endColumn":7},{"ruleId":"630","severity":1,"message":"662","line":21,"column":38,"nodeType":"632","messageId":"633","endLine":21,"endColumn":48},{"ruleId":"630","severity":1,"message":"663","line":21,"column":50,"nodeType":"632","messageId":"633","endLine":21,"endColumn":63},{"ruleId":"630","severity":1,"message":"664","line":4,"column":10,"nodeType":"632","messageId":"633","endLine":4,"endColumn":20},{"ruleId":"630","severity":1,"message":"665","line":7,"column":9,"nodeType":"632","messageId":"633","endLine":7,"endColumn":14},{"ruleId":"630","severity":1,"message":"666","line":26,"column":22,"nodeType":"632","messageId":"633","endLine":26,"endColumn":37},{"ruleId":"630","severity":1,"message":"667","line":32,"column":7,"nodeType":"632","messageId":"633","endLine":32,"endColumn":14},{"ruleId":"649","severity":1,"message":"654","line":54,"column":10,"nodeType":"645","endLine":54,"endColumn":12,"suggestions":"668"},{"ruleId":"630","severity":1,"message":"631","line":1,"column":16,"nodeType":"632","messageId":"633","endLine":1,"endColumn":24},{"ruleId":"630","severity":1,"message":"669","line":1,"column":26,"nodeType":"632","messageId":"633","endLine":1,"endColumn":35},{"ruleId":"630","severity":1,"message":"670","line":2,"column":16,"nodeType":"632","messageId":"633","endLine":2,"endColumn":25},{"ruleId":"630","severity":1,"message":"671","line":3,"column":3,"nodeType":"632","messageId":"633","endLine":3,"endColumn":19},{"ruleId":"630","severity":1,"message":"661","line":4,"column":3,"nodeType":"632","messageId":"633","endLine":4,"endColumn":7},{"ruleId":"630","severity":1,"message":"672","line":5,"column":8,"nodeType":"632","messageId":"633","endLine":5,"endColumn":14},{"ruleId":"630","severity":1,"message":"673","line":7,"column":10,"nodeType":"632","messageId":"633","endLine":7,"endColumn":21},{"ruleId":"630","severity":1,"message":"674","line":7,"column":23,"nodeType":"632","messageId":"633","endLine":7,"endColumn":38},{"ruleId":"630","severity":1,"message":"675","line":15,"column":10,"nodeType":"632","messageId":"633","endLine":15,"endColumn":20},{"ruleId":"630","severity":1,"message":"667","line":18,"column":7,"nodeType":"632","messageId":"633","endLine":18,"endColumn":14},{"ruleId":"626","replacedBy":"676"},{"ruleId":"628","replacedBy":"677"},{"ruleId":"630","severity":1,"message":"631","line":1,"column":17,"nodeType":"632","messageId":"633","endLine":1,"endColumn":25},{"ruleId":"630","severity":1,"message":"678","line":372,"column":10,"nodeType":"632","messageId":"633","endLine":372,"endColumn":26},{"ruleId":"630","severity":1,"message":"679","line":5,"column":24,"nodeType":"632","messageId":"633","endLine":5,"endColumn":41},{"ruleId":"630","severity":1,"message":"680","line":7,"column":17,"nodeType":"632","messageId":"633","endLine":7,"endColumn":31},{"ruleId":"630","severity":1,"message":"639","line":9,"column":21,"nodeType":"632","messageId":"633","endLine":9,"endColumn":32},{"ruleId":"630","severity":1,"message":"640","line":10,"column":19,"nodeType":"632","messageId":"633","endLine":10,"endColumn":30},{"ruleId":"630","severity":1,"message":"641","line":11,"column":18,"nodeType":"632","messageId":"633","endLine":11,"endColumn":25},{"ruleId":"630","severity":1,"message":"642","line":26,"column":8,"nodeType":"632","messageId":"633","endLine":26,"endColumn":11},{"ruleId":"643","severity":1,"message":"644","line":35,"column":19,"nodeType":"645","messageId":"646","endLine":84,"endColumn":2},{"ruleId":"630","severity":1,"message":"681","line":6,"column":3,"nodeType":"632","messageId":"633","endLine":6,"endColumn":12},{"ruleId":"630","severity":1,"message":"682","line":7,"column":3,"nodeType":"632","messageId":"633","endLine":7,"endColumn":7},{"ruleId":"630","severity":1,"message":"683","line":8,"column":3,"nodeType":"632","messageId":"633","endLine":8,"endColumn":11},{"ruleId":"630","severity":1,"message":"684","line":9,"column":3,"nodeType":"632","messageId":"633","endLine":9,"endColumn":6},{"ruleId":"630","severity":1,"message":"647","line":10,"column":3,"nodeType":"632","messageId":"633","endLine":10,"endColumn":7},{"ruleId":"630","severity":1,"message":"685","line":14,"column":18,"nodeType":"632","messageId":"633","endLine":14,"endColumn":26},{"ruleId":"630","severity":1,"message":"679","line":15,"column":24,"nodeType":"632","messageId":"633","endLine":15,"endColumn":41},{"ruleId":"630","severity":1,"message":"686","line":16,"column":13,"nodeType":"632","messageId":"633","endLine":16,"endColumn":24},{"ruleId":"630","severity":1,"message":"687","line":17,"column":13,"nodeType":"632","messageId":"633","endLine":17,"endColumn":23},{"ruleId":"630","severity":1,"message":"688","line":18,"column":11,"nodeType":"632","messageId":"633","endLine":18,"endColumn":19},{"ruleId":"630","severity":1,"message":"689","line":27,"column":10,"nodeType":"632","messageId":"633","endLine":27,"endColumn":15},{"ruleId":"630","severity":1,"message":"648","line":27,"column":29,"nodeType":"632","messageId":"633","endLine":27,"endColumn":35},{"ruleId":"630","severity":1,"message":"690","line":28,"column":8,"nodeType":"632","messageId":"633","endLine":28,"endColumn":20},{"ruleId":"630","severity":1,"message":"691","line":29,"column":8,"nodeType":"632","messageId":"633","endLine":29,"endColumn":18},{"ruleId":"630","severity":1,"message":"692","line":37,"column":27,"nodeType":"632","messageId":"633","endLine":37,"endColumn":34},{"ruleId":"630","severity":1,"message":"693","line":39,"column":7,"nodeType":"632","messageId":"633","endLine":39,"endColumn":15},{"ruleId":"630","severity":1,"message":"694","line":70,"column":7,"nodeType":"632","messageId":"633","endLine":70,"endColumn":20},{"ruleId":"630","severity":1,"message":"695","line":98,"column":7,"nodeType":"632","messageId":"633","endLine":98,"endColumn":19},{"ruleId":"630","severity":1,"message":"696","line":101,"column":8,"nodeType":"632","messageId":"633","endLine":101,"endColumn":16},{"ruleId":"630","severity":1,"message":"697","line":101,"column":18,"nodeType":"632","messageId":"633","endLine":101,"endColumn":29},{"ruleId":"630","severity":1,"message":"698","line":102,"column":8,"nodeType":"632","messageId":"633","endLine":102,"endColumn":21},{"ruleId":"630","severity":1,"message":"699","line":102,"column":23,"nodeType":"632","messageId":"633","endLine":102,"endColumn":39},{"ruleId":"630","severity":1,"message":"700","line":103,"column":8,"nodeType":"632","messageId":"633","endLine":103,"endColumn":25},{"ruleId":"630","severity":1,"message":"701","line":103,"column":27,"nodeType":"632","messageId":"633","endLine":103,"endColumn":47},{"ruleId":"630","severity":1,"message":"702","line":104,"column":8,"nodeType":"632","messageId":"633","endLine":104,"endColumn":29},{"ruleId":"630","severity":1,"message":"703","line":104,"column":31,"nodeType":"632","messageId":"633","endLine":104,"endColumn":55},{"ruleId":"630","severity":1,"message":"704","line":105,"column":8,"nodeType":"632","messageId":"633","endLine":105,"endColumn":19},{"ruleId":"630","severity":1,"message":"705","line":105,"column":21,"nodeType":"632","messageId":"633","endLine":105,"endColumn":35},{"ruleId":"630","severity":1,"message":"706","line":106,"column":8,"nodeType":"632","messageId":"633","endLine":106,"endColumn":20},{"ruleId":"630","severity":1,"message":"707","line":106,"column":22,"nodeType":"632","messageId":"633","endLine":106,"endColumn":35},{"ruleId":"626","replacedBy":"708"},{"ruleId":"628","replacedBy":"709"},{"ruleId":"710","severity":1,"message":"711","line":54,"column":3,"nodeType":"712","messageId":"713","endLine":54,"endColumn":15},{"ruleId":"630","severity":1,"message":"675","line":4,"column":8,"nodeType":"632","messageId":"633","endLine":4,"endColumn":18},{"ruleId":"630","severity":1,"message":"667","line":27,"column":7,"nodeType":"632","messageId":"633","endLine":27,"endColumn":14},{"ruleId":"649","severity":1,"message":"654","line":50,"column":10,"nodeType":"645","endLine":50,"endColumn":12,"suggestions":"714"},{"ruleId":"626","replacedBy":"715"},{"ruleId":"628","replacedBy":"716"},{"ruleId":"630","severity":1,"message":"717","line":5,"column":11,"nodeType":"632","messageId":"633","endLine":5,"endColumn":19},{"ruleId":"630","severity":1,"message":"718","line":19,"column":16,"nodeType":"632","messageId":"633","endLine":19,"endColumn":21},{"ruleId":"630","severity":1,"message":"719","line":22,"column":9,"nodeType":"632","messageId":"633","endLine":22,"endColumn":18},{"ruleId":"630","severity":1,"message":"720","line":22,"column":20,"nodeType":"632","messageId":"633","endLine":22,"endColumn":32},{"ruleId":"630","severity":1,"message":"721","line":23,"column":9,"nodeType":"632","messageId":"633","endLine":23,"endColumn":14},{"ruleId":"630","severity":1,"message":"722","line":23,"column":16,"nodeType":"632","messageId":"633","endLine":23,"endColumn":24},{"ruleId":"630","severity":1,"message":"674","line":3,"column":9,"nodeType":"632","messageId":"633","endLine":3,"endColumn":24},{"ruleId":"630","severity":1,"message":"719","line":22,"column":9,"nodeType":"632","messageId":"633","endLine":22,"endColumn":18},{"ruleId":"630","severity":1,"message":"720","line":22,"column":20,"nodeType":"632","messageId":"633","endLine":22,"endColumn":32},{"ruleId":"630","severity":1,"message":"721","line":23,"column":9,"nodeType":"632","messageId":"633","endLine":23,"endColumn":14},{"ruleId":"630","severity":1,"message":"722","line":23,"column":16,"nodeType":"632","messageId":"633","endLine":23,"endColumn":24},{"ruleId":"630","severity":1,"message":"723","line":8,"column":3,"nodeType":"632","messageId":"633","endLine":8,"endColumn":7},{"ruleId":"630","severity":1,"message":"724","line":9,"column":3,"nodeType":"632","messageId":"633","endLine":9,"endColumn":6},{"ruleId":"649","severity":1,"message":"725","line":59,"column":6,"nodeType":"645","endLine":59,"endColumn":8,"suggestions":"726"},{"ruleId":"630","severity":1,"message":"669","line":1,"column":17,"nodeType":"632","messageId":"633","endLine":1,"endColumn":26},{"ruleId":"630","severity":1,"message":"727","line":9,"column":3,"nodeType":"632","messageId":"633","endLine":9,"endColumn":13},{"ruleId":"630","severity":1,"message":"728","line":10,"column":3,"nodeType":"632","messageId":"633","endLine":10,"endColumn":9},{"ruleId":"630","severity":1,"message":"683","line":11,"column":3,"nodeType":"632","messageId":"633","endLine":11,"endColumn":11},{"ruleId":"630","severity":1,"message":"695","line":25,"column":7,"nodeType":"632","messageId":"633","endLine":25,"endColumn":19},{"ruleId":"649","severity":1,"message":"725","line":93,"column":8,"nodeType":"645","endLine":93,"endColumn":10,"suggestions":"729"},{"ruleId":"630","severity":1,"message":"721","line":26,"column":10,"nodeType":"632","messageId":"633","endLine":26,"endColumn":15},{"ruleId":"630","severity":1,"message":"730","line":28,"column":10,"nodeType":"632","messageId":"633","endLine":28,"endColumn":18},{"ruleId":"630","severity":1,"message":"731","line":28,"column":20,"nodeType":"632","messageId":"633","endLine":28,"endColumn":31},{"ruleId":"649","severity":1,"message":"654","line":51,"column":10,"nodeType":"645","endLine":51,"endColumn":12,"suggestions":"732"},{"ruleId":"630","severity":1,"message":"669","line":1,"column":26,"nodeType":"632","messageId":"633","endLine":1,"endColumn":35},{"ruleId":"630","severity":1,"message":"733","line":27,"column":11,"nodeType":"632","messageId":"633","endLine":27,"endColumn":17},{"ruleId":"649","severity":1,"message":"734","line":64,"column":6,"nodeType":"645","endLine":64,"endColumn":8,"suggestions":"735"},{"ruleId":"630","severity":1,"message":"720","line":26,"column":22,"nodeType":"632","messageId":"633","endLine":26,"endColumn":34},{"ruleId":"630","severity":1,"message":"733","line":30,"column":11,"nodeType":"632","messageId":"633","endLine":30,"endColumn":17},{"ruleId":"649","severity":1,"message":"736","line":94,"column":6,"nodeType":"645","endLine":94,"endColumn":8,"suggestions":"737"},{"ruleId":"630","severity":1,"message":"738","line":3,"column":8,"nodeType":"632","messageId":"633","endLine":3,"endColumn":21},{"ruleId":"630","severity":1,"message":"739","line":7,"column":18,"nodeType":"632","messageId":"633","endLine":7,"endColumn":27},{"ruleId":"630","severity":1,"message":"720","line":23,"column":22,"nodeType":"632","messageId":"633","endLine":23,"endColumn":34},{"ruleId":"630","severity":1,"message":"733","line":28,"column":11,"nodeType":"632","messageId":"633","endLine":28,"endColumn":17},{"ruleId":"649","severity":1,"message":"734","line":74,"column":6,"nodeType":"645","endLine":74,"endColumn":8,"suggestions":"740"},{"ruleId":"741","severity":1,"message":"742","line":191,"column":78,"nodeType":"743","messageId":"744","endLine":191,"endColumn":79},{"ruleId":"630","severity":1,"message":"669","line":1,"column":15,"nodeType":"632","messageId":"633","endLine":1,"endColumn":24},{"ruleId":"630","severity":1,"message":"648","line":2,"column":17,"nodeType":"632","messageId":"633","endLine":2,"endColumn":23},{"ruleId":"630","severity":1,"message":"684","line":2,"column":25,"nodeType":"632","messageId":"633","endLine":2,"endColumn":28},{"ruleId":"630","severity":1,"message":"720","line":17,"column":21,"nodeType":"632","messageId":"633","endLine":17,"endColumn":33},{"ruleId":"630","severity":1,"message":"664","line":3,"column":10,"nodeType":"632","messageId":"633","endLine":3,"endColumn":20},{"ruleId":"649","severity":1,"message":"745","line":43,"column":4,"nodeType":"645","endLine":43,"endColumn":6,"suggestions":"746"},{"ruleId":"747","severity":1,"message":"748","line":61,"column":29,"nodeType":"749","messageId":"750","endLine":61,"endColumn":30,"fix":"751"},{"ruleId":"752","severity":1,"message":"753","line":131,"column":41,"nodeType":"754","messageId":"713","endLine":131,"endColumn":43},{"ruleId":"630","severity":1,"message":"755","line":4,"column":10,"nodeType":"632","messageId":"633","endLine":4,"endColumn":14},{"ruleId":"630","severity":1,"message":"756","line":5,"column":39,"nodeType":"632","messageId":"633","endLine":5,"endColumn":48},{"ruleId":"630","severity":1,"message":"727","line":5,"column":61,"nodeType":"632","messageId":"633","endLine":5,"endColumn":71},{"ruleId":"630","severity":1,"message":"757","line":5,"column":81,"nodeType":"632","messageId":"633","endLine":5,"endColumn":91},{"ruleId":"630","severity":1,"message":"721","line":13,"column":12,"nodeType":"632","messageId":"633","endLine":13,"endColumn":17},{"ruleId":"630","severity":1,"message":"722","line":13,"column":19,"nodeType":"632","messageId":"633","endLine":13,"endColumn":27},{"ruleId":"649","severity":1,"message":"758","line":51,"column":6,"nodeType":"645","endLine":51,"endColumn":8,"suggestions":"759"},{"ruleId":"630","severity":1,"message":"727","line":10,"column":3,"nodeType":"632","messageId":"633","endLine":10,"endColumn":13},{"ruleId":"630","severity":1,"message":"728","line":11,"column":3,"nodeType":"632","messageId":"633","endLine":11,"endColumn":9},{"ruleId":"630","severity":1,"message":"683","line":12,"column":3,"nodeType":"632","messageId":"633","endLine":12,"endColumn":11},{"ruleId":"649","severity":1,"message":"760","line":64,"column":8,"nodeType":"645","endLine":64,"endColumn":10,"suggestions":"761"},"no-native-reassign",["762"],"no-negated-in-lhs",["763"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Dashboard' is defined but never used.","'visitUsers' is assigned a value but never used.","'setVisitUsers' is assigned a value but never used.","'LoginUser' is defined but never used.","'AreaChart' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","'Link' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["764"],"React Hook useEffect has a missing dependency: 'usersData'. Either include it or remove the dependency array.",["765"],["762"],["763"],"'response' is assigned a value but never used.","'Redirect' is defined but never used.","'IconButton' is defined but never used.","'Fade' is defined but never used.","'SignupUser' is defined but never used.","'SignupCompany' is defined but never used.","'makeStyles' is defined but never used.","'Route' is defined but never used.","'setCompanyDataa' is assigned a value but never used.","'classes' is assigned a value but never used.",["766"],"'useEffect' is defined but never used.","'TextField' is defined but never used.","'CircularProgress' is defined but never used.","'QRCode' is defined but never used.","'messageUser' is defined but never used.","'isAuthenticated' is defined but never used.","'Typography' is defined but never used.",["762"],["763"],"'getMainChartData' is defined but never used.","'NotificationsIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'InputBase' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Fab' is defined but never used.","'MailIcon' is defined but never used.","'AccountIcon' is defined but never used.","'SearchIcon' is defined but never used.","'SendIcon' is defined but never used.","'Badge' is defined but never used.","'Notification' is defined but never used.","'UserAvatar' is defined but never used.","'signOut' is defined but never used.","'messages' is assigned a value but never used.","'notifications' is assigned a value but never used.","'userDispatch' is assigned a value but never used.","'mailMenu' is assigned a value but never used.","'setMailMenu' is assigned a value but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'notificationsMenu' is assigned a value but never used.","'setNotificationsMenu' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'profileMenu' is assigned a value but never used.","'setProfileMenu' is assigned a value but never used.","'isSearchOpen' is assigned a value but never used.","'setSearchOpen' is assigned a value but never used.",["762"],["763"],"no-dupe-keys","Duplicate key 'border-top'.","ObjectExpression","unexpected",["767"],["762"],["763"],"'EditIcon' is defined but never used.","'token' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","React Hook useEffect has missing dependencies: 'companies', 'isAuth.user.company', and 'isAuth.user.role'. Either include them or remove the dependency array.",["768"],"'InputLabel' is defined but never used.","'Select' is defined but never used.",["769"],"'contacts' is assigned a value but never used.","'setContacts' is assigned a value but never used.",["770"],"'showQr' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'QrCodeHandler' and 'response'. Either include them or remove the dependency array.",["771"],"React Hook useEffect has missing dependencies: 'QrCodeHandler', 'allGroups', and 'response'. Either include them or remove the dependency array.",["772"],"'useMediaQuery' is defined but never used.","'propTypes' is defined but never used.",["773"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'companies'. Either include it or remove the dependency array.",["774"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"775","text":"776"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Grid' is defined but never used.","'TableHead' is defined but never used.","'setCompany' is defined but never used.","React Hook useEffect has missing dependencies: 'mappingColumns' and 'props.filename'. Either include them or remove the dependency array.",["777"],"React Hook useEffect has a missing dependency: 'props.userToEdit'. Either include it or remove the dependency array. If 'setEditUser' needs the current value of 'props.userToEdit', you can also switch to useReducer instead of useState and read 'props.userToEdit' in the reducer.",["778"],"no-global-assign","no-unsafe-negation",{"desc":"779","fix":"780"},{"desc":"781","fix":"782"},{"desc":"781","fix":"783"},{"desc":"781","fix":"784"},{"desc":"785","fix":"786"},{"desc":"785","fix":"787"},{"desc":"781","fix":"788"},{"desc":"789","fix":"790"},{"desc":"791","fix":"792"},{"desc":"789","fix":"793"},{"desc":"794","fix":"795"},[2119,2120],"",{"desc":"796","fix":"797"},{"desc":"798","fix":"799"},"Update the dependencies array to be: [token]",{"range":"800","text":"801"},"Update the dependencies array to be: [usersData]",{"range":"802","text":"803"},{"range":"804","text":"803"},{"range":"805","text":"803"},"Update the dependencies array to be: [companies, isAuth.user.company, isAuth.user.role]",{"range":"806","text":"807"},{"range":"808","text":"807"},{"range":"809","text":"803"},"Update the dependencies array to be: [QrCodeHandler, response]",{"range":"810","text":"811"},"Update the dependencies array to be: [QrCodeHandler, allGroups, response]",{"range":"812","text":"813"},{"range":"814","text":"811"},"Update the dependencies array to be: [companies]",{"range":"815","text":"816"},"Update the dependencies array to be: [mappingColumns, props.filename]",{"range":"817","text":"818"},"Update the dependencies array to be: [props.userToEdit]",{"range":"819","text":"820"},[1441,1443],"[token]",[2733,2735],"[usersData]",[1609,1611],[1345,1347],[1504,1506],"[companies, isAuth.user.company, isAuth.user.role]",[3030,3032],[1584,1586],[2187,2189],"[QrCodeHandler, response]",[3141,3143],"[QrCodeHandler, allGroups, response]",[2741,2743],[1524,1526],"[companies]",[1843,1845],"[mappingColumns, props.filename]",[1870,1872],"[props.userToEdit]"]